CREATE OR REPLACE FUNCTION fn_migrate_country() RETURNS VOID AS $$
DECLARE rec1 RECORD;
DECLARE countrycount SMALLINT;

BEGIN
    countrycount := 0;
    FOR rec1 IN SELECT * FROM pm_list LOOP
	 countrycount :=  (SELECT cnt FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT COUNT(1) FROM pg_tables WHERE tablename = ''country''') AS
	linktable (cnt smallint));

        IF countrycount > 0 THEN
		--country	        
		INSERT INTO country (original_id, name, currency, flag, c_order, pm_id) 	
		SELECT 	id, 
			name, 
			currency, 
			flag, 
			c_order, 
			pm_id
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, name, currency, flag, c_order, ' || rec1.id || ' FROM country') AS
		linktable 
			(id bigint,
			name character varying(45),
			currency character varying(4),
			flag character varying(45),
			c_order smallint,
			pm_id smallint);

		--company_info (child of country)
		INSERT INTO company_info (original_id, photo_id, corp_flag, company_phone, email, company_home_url, created_at, updated_at, created_by, updated_by, country_id, currency, pm_id) 	
		SELECT 	linktable.id,
			linktable.photo_id, 
			linktable.corp_flag, 
			linktable.company_phone, 
			linktable.email, 
			linktable.company_home_url, 
			linktable.created_at, 
			linktable.updated_at, 
			linktable.created_by, 
			linktable.updated_by, 
			X.id, 
			linktable.currency,
			linktable.pm_id
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, photo_id, corp_flag, company_phone, email, company_home_url, created_at, updated_at, created_by, updated_by, country_id, currency, ' || rec1.id || ' FROM company_info') AS
		linktable 
			(id bigint,
			photo_id bigint,
			corp_flag smallint,
			company_phone character varying(32),
			email character varying(255),
			company_home_url character varying(255),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			country_id bigint,
			currency text,
			pm_id smallint)
		LEFT JOIN country X ON X.original_id = linktable.country_id AND X.pm_id = rec1.id;
			--WHERE X.pm_id = rec1.id;

		--company_info_intl (child of company_info)
		INSERT INTO company_info_intl (company_info_id, company_name, company_person_in_charge, company_introduce, language_id, created_at, updated_at, created_by, updated_by) 	
		SELECT 	X.id, 
			linktable.company_name, 
			linktable.company_person_in_charge, 
			linktable.company_introduce, 
			linktable.language_id, 
			linktable.created_at, 
			linktable.updated_at, 
			linktable.created_by, 
			linktable.updated_by
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT company_info_id, company_name, company_person_in_charge, company_introduce, language_id, created_at, updated_at, created_by, updated_by FROM company_info_intl') AS
		linktable 
			(company_info_id bigint,
			company_name character varying(255),
			company_person_in_charge character varying(255),
			company_introduce character varying(2000),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint)
		LEFT JOIN company_info X ON X.original_id = linktable.company_info_id AND X.pm_id = rec1.id;
			--WHERE X.pm_id = rec1.id;


		--prefecture (child of country)
		INSERT INTO prefecture (original_id, country_id, name, rome, abbr, pm_id) 	
		SELECT 	linktable.id, 
			X.id, 
			linktable.name, 
			linktable.rome, 
			linktable.abbr, 
			linktable.pm_id
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, country_id, name, rome, abbr, ' || rec1.id || ' FROM prefecture') AS
		linktable 
			(id bigint,
			country_id bigint,
			name character varying(128),
			rome character varying(128),
			abbr character varying(16),
			pm_id smallint)
		LEFT JOIN country X ON X.original_id = linktable.country_id AND X.pm_id = rec1.id;
			--WHERE X.pm_id = rec1.id;


		--postal_code (child of country & prefecture)
		INSERT INTO postal_code (postal_code, prefecture_id, country_id, postal_id, city, address) 
			SELECT  
				linktable.postal_code, 
				Y.id, 
				X.id, 
				linktable.postal_id, 
				linktable.city, 
				linktable.address 
			FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT postal_code, prefecture_id, country_id, postal_id, city, address FROM postal_code') AS
			linktable 
				(postal_code character varying(32),
				prefecture_id bigint,
				country_id bigint,
				postal_id bigint,
				city character varying(64),
				address character varying(255))
			LEFT JOIN country X ON X.original_id = linktable.country_id AND X.pm_id = rec1.id
			LEFT JOIN prefecture Y ON Y.original_id = linktable.prefecture_id AND Y.pm_id = rec1.id;
			--WHERE X.pm_id = rec1.id;


		--prefecture_line_info (child of prefecture & railway_line)
		INSERT INTO prefecture_line_info (prefecture_id, line_cd) 
			SELECT  Y.id, 
				X.line_cd 
			FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT prefecture_id, line_cd FROM prefecture_line_info') AS
			linktable 
				(prefecture_id bigint,
				line_cd character varying(255))
			JOIN railway_line X ON X.original_line_cd = linktable.line_cd
			JOIN prefecture Y ON Y.original_id = linktable.prefecture_id
			WHERE Y.pm_id = rec1.id AND X.pm_id = rec1.id;



		--property (child of country)
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO property (original_id, country_id, designer_name_id, developer_name_id, construction_company_name_id, external_property_id, property_type, ownership_type, currency, postal_code, house_number, latitude, longitude, status, land_right, land_rent, land_rent_start_date, land_rent_end_date, land_rent_period, land_category, building_structure, floors_above_ground, floors_under_ground, asset_management_stopped, completion_date, rebuilt_display_count, newly_built, rebuilt_date_1, rebuilt_date_2, rebuilt_date_3, rebuilt_date_4, rebuilt_date_5, rebuilt_date_6, rebuilt_date_7, rebuilt_date_8, rebuilt_date_9, rebuilt_date_10, total_units, number_of_consecutive_buildings, method_of_area_measurement, land_area_per_register, land_area_per_measurement, building_area_per_measurement, building_area_per_register, building_coverage, floor_area_ratio, area_classification, fire_protection_specified, certificate_of_completion, management_type, management_fee, display_count, zoning_no1, zoning_no2, zoning_no3, zoning_no4, zoning_no5, zoning_no6, zoning_no7, zoning_no8, zoning_no9, zoning_no10, zoning_no11, zoning_no12, zoning_no13, created_at, updated_at, created_by, updated_by, pm_id) 	
		SELECT 	linktable.id,
			X.id,
			Y.id,
			Y.id,
			Y.id,
			linktable.external_property_id,
			linktable.property_type,
			linktable.ownership_type,
			linktable.currency,
			linktable.postal_code,
			linktable.house_number,
			linktable.latitude,
			linktable.longitude,
			linktable.status,
			linktable.land_right,
			linktable.land_rent,
			linktable.land_rent_start_date,
			linktable.land_rent_end_date,
			linktable.land_rent_period,
			linktable.land_category,
			linktable.building_structure,
			linktable.floors_above_ground,
			linktable.floors_under_ground,
			linktable.asset_management_stopped,
			linktable.completion_date,
			linktable.rebuilt_display_count,
			linktable.newly_built,
			linktable.rebuilt_date_1,
			linktable.rebuilt_date_2,
			linktable.rebuilt_date_3,
			linktable.rebuilt_date_4,
			linktable.rebuilt_date_5,
			linktable.rebuilt_date_6,
			linktable.rebuilt_date_7,
			linktable.rebuilt_date_8,
			linktable.rebuilt_date_9,
			linktable.rebuilt_date_10,
			linktable.total_units,
			linktable.number_of_consecutive_buildings,
			linktable.method_of_area_measurement,
			linktable.land_area_per_register,
			linktable.land_area_per_measurement,
			linktable.building_area_per_measurement,
			linktable.building_area_per_register,
			linktable.building_coverage,
			linktable.floor_area_ratio,
			linktable.area_classification,
			linktable.fire_protection_specified,
			linktable.certificate_of_completion,
			linktable.management_type,
			linktable.management_fee,
			linktable.display_count,
			linktable.zoning_no1,
			linktable.zoning_no2,
			linktable.zoning_no3,
			linktable.zoning_no4,
			linktable.zoning_no5,
			linktable.zoning_no6,
			linktable.zoning_no7,
			linktable.zoning_no8,
			linktable.zoning_no9,
			linktable.zoning_no10,
			linktable.zoning_no11,
			linktable.zoning_no12,
			linktable.zoning_no13,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.pm_id	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, country_id, designer_name_id, developer_name_id, construction_company_name_id, external_property_id, property_type, ownership_type, currency, postal_code, house_number, latitude, longitude, status, land_right, land_rent, land_rent_start_date, land_rent_end_date, land_rent_period, land_category, building_structure, floors_above_ground, floors_under_ground, asset_management_stopped, completion_date, rebuilt_display_count, newly_built, rebuilt_date_1, rebuilt_date_2, rebuilt_date_3, rebuilt_date_4, rebuilt_date_5, rebuilt_date_6, rebuilt_date_7, rebuilt_date_8, rebuilt_date_9, rebuilt_date_10, total_units, number_of_consecutive_buildings, method_of_area_measurement, land_area_per_register, land_area_per_measurement, building_area_per_measurement, building_area_per_register, building_coverage, floor_area_ratio, area_classification, fire_protection_specified, certificate_of_completion, management_type, management_fee, display_count, zoning_no1, zoning_no2, zoning_no3, zoning_no4, zoning_no5, zoning_no6, zoning_no7, zoning_no8, zoning_no9, zoning_no10, zoning_no11, zoning_no12, zoning_no13, created_at, updated_at, created_by, updated_by, ' || rec1.id || ' FROM property') AS
		linktable 
			(id bigint,
			country_id bigint,
			designer_name_id bigint,
			developer_name_id bigint,
			construction_company_name_id bigint,
			external_property_id character varying(32),
			property_type bigint,
			ownership_type bigint,
			currency bigint,
			postal_code character varying(124),
			house_number character varying(128),
			latitude double precision,
			longitude double precision,
			status character varying(64),
			land_right bigint,
			land_rent double precision,
			land_rent_start_date date,  
			land_rent_end_date date, 
			land_rent_period bigint,
			land_category bigint,
			building_structure smallint,
			floors_above_ground smallint,
			floors_under_ground smallint,
			asset_management_stopped smallint,
			completion_date date,
			rebuilt_display_count bigint,
			newly_built boolean,
			rebuilt_date_1 date,
			rebuilt_date_2 date,
			rebuilt_date_3 date, 
			rebuilt_date_4 date, 
			rebuilt_date_5 date, 
			rebuilt_date_6 date, 
			rebuilt_date_7 date, 
			rebuilt_date_8 date, 
			rebuilt_date_9 date, 
			rebuilt_date_10 date,  
			total_units bigint,
			number_of_consecutive_buildings smallint,
			method_of_area_measurement smallint,
			land_area_per_register double precision,
			land_area_per_measurement double precision,
			building_area_per_measurement double precision,
			building_area_per_register double precision,
			building_coverage double precision,
			floor_area_ratio double precision,
			area_classification smallint,
			fire_protection_specified smallint,
			certificate_of_completion smallint,
			management_type smallint,
			management_fee double precision,
			display_count bigint,
			zoning_no1 smallint,           
			zoning_no2 smallint,            
			zoning_no3 smallint,            
			zoning_no4 smallint,            
			zoning_no5 smallint,            
			zoning_no6 smallint,            
			zoning_no7 smallint,            
			zoning_no8 smallint,            
			zoning_no9 smallint,            
			zoning_no10 smallint,             
			zoning_no11 smallint,            
			zoning_no12 smallint,            
			zoning_no13 smallint,            
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			pm_id smallint)
		LEFT JOIN country X ON X.original_id = linktable.country_id AND X.pm_id = rec1.id 
		LEFT JOIN payee_vendor Y ON Y.original_id = linktable.developer_name_id AND Y.original_id = linktable.designer_name_id AND Y.original_id = linktable.construction_company_name_id AND Y.pm_id = rec1.id;
		--WHERE X.pm_id = rec1.id;	
		
		ELSE		

		INSERT INTO property (original_id, country_id, designer_name_id, developer_name_id, construction_company_name_id, external_property_id, property_type, ownership_type, currency, postal_code, house_number, latitude, longitude, status, land_right, land_rent, land_rent_start_date, land_rent_end_date, land_rent_period, land_category, building_structure, floors_above_ground, floors_under_ground, asset_management_stopped, completion_date, rebuilt_display_count, newly_built, rebuilt_date_1, rebuilt_date_2, rebuilt_date_3, rebuilt_date_4, rebuilt_date_5, rebuilt_date_6, rebuilt_date_7, rebuilt_date_8, rebuilt_date_9, rebuilt_date_10, total_units, number_of_consecutive_buildings, method_of_area_measurement, land_area_per_register, land_area_per_measurement, building_area_per_measurement, building_area_per_register, building_coverage, floor_area_ratio, area_classification, fire_protection_specified, certificate_of_completion, management_type, management_fee, display_count, zoning_no1, zoning_no2, zoning_no3, zoning_no4, zoning_no5, zoning_no6, zoning_no7, zoning_no8, zoning_no9, zoning_no10, zoning_no11, zoning_no12, zoning_no13, created_at, updated_at, created_by, updated_by, leasable_area, japan_flag, leasable_area_tsubo, land_area_per_register_tsubo, land_area_per_measurement_tsubo, building_area_per_measurement_tsubo, building_area_per_register_tsubo, pm_id) 	
		SELECT 	linktable.id,
			X.id,
			Y.id,
			Y.id,
			Y.id,
			linktable.external_property_id,
			linktable.property_type,
			linktable.ownership_type,
			linktable.currency,
			linktable.postal_code,
			linktable.house_number,
			linktable.latitude,
			linktable.longitude,
			linktable.status,
			linktable.land_right,
			linktable.land_rent,
			linktable.land_rent_start_date,
			linktable.land_rent_end_date,
			linktable.land_rent_period,
			linktable.land_category,
			linktable.building_structure,
			linktable.floors_above_ground,
			linktable.floors_under_ground,
			linktable.asset_management_stopped,
			linktable.completion_date,
			linktable.rebuilt_display_count,
			linktable.newly_built,
			linktable.rebuilt_date_1,
			linktable.rebuilt_date_2,
			linktable.rebuilt_date_3,
			linktable.rebuilt_date_4,
			linktable.rebuilt_date_5,
			linktable.rebuilt_date_6,
			linktable.rebuilt_date_7,
			linktable.rebuilt_date_8,
			linktable.rebuilt_date_9,
			linktable.rebuilt_date_10,
			linktable.total_units,
			linktable.number_of_consecutive_buildings,
			linktable.method_of_area_measurement,
			linktable.land_area_per_register,
			linktable.land_area_per_measurement,
			linktable.building_area_per_measurement,
			linktable.building_area_per_register,
			linktable.building_coverage,
			linktable.floor_area_ratio,
			linktable.area_classification,
			linktable.fire_protection_specified,
			linktable.certificate_of_completion,
			linktable.management_type,
			linktable.management_fee,
			linktable.display_count,
			linktable.zoning_no1,
			linktable.zoning_no2,       
			linktable.zoning_no3,       
			linktable.zoning_no4,       
			linktable.zoning_no5,       
			linktable.zoning_no6,       
			linktable.zoning_no7,       
			linktable.zoning_no8,       
			linktable.zoning_no9,       
			linktable.zoning_no10,       
			linktable.zoning_no11,      
			linktable.zoning_no12,      
			linktable.zoning_no13,      
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,  
			linktable.updated_by,  
			leasable_area,
			linktable.japan_flag,
			linktable.leasable_area_tsubo,
			linktable.land_area_per_register_tsubo,
			linktable.land_area_per_measurement_tsubo,
			linktable.building_area_per_measurement_tsubo,
			linktable.building_area_per_register_tsubo,
			linktable.pm_id
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, country_id, designer_name_id, developer_name_id, construction_company_name_id, external_property_id, property_type, ownership_type, currency, postal_code, house_number, latitude, longitude, status, land_right, land_rent, land_rent_start_date, land_rent_end_date, land_rent_period, land_category, building_structure, floors_above_ground, floors_under_ground, asset_management_stopped, completion_date, rebuilt_display_count, newly_built, rebuilt_date_1, rebuilt_date_2, rebuilt_date_3, rebuilt_date_4, rebuilt_date_5, rebuilt_date_6, rebuilt_date_7, rebuilt_date_8, rebuilt_date_9, rebuilt_date_10, total_units, number_of_consecutive_buildings, method_of_area_measurement, land_area_per_register, land_area_per_measurement, building_area_per_measurement, building_area_per_register, building_coverage, floor_area_ratio, area_classification, fire_protection_specified, certificate_of_completion, management_type, management_fee, display_count, zoning_no1, zoning_no2, zoning_no3, zoning_no4, zoning_no5, zoning_no6, zoning_no7, zoning_no8, zoning_no9, zoning_no10, zoning_no11, zoning_no12, zoning_no13, created_at, updated_at, created_by, updated_by, leasable_area, japan_flag, leasable_area_tsubo, land_area_per_register_tsubo, land_area_per_measurement_tsubo, building_area_per_measurement_tsubo, building_area_per_register_tsubo, ' || rec1.id || ' FROM property') AS
		linktable 
			(id bigint,
			country_id bigint,
			designer_name_id bigint,
			developer_name_id bigint,
			construction_company_name_id bigint,
			external_property_id character varying(32),
			property_type bigint,
			ownership_type bigint,
			currency bigint,
			postal_code character varying(124),
			house_number character varying(128),
			latitude double precision,
			longitude double precision,
			status character varying(64),
			land_right bigint,
			land_rent double precision,
			land_rent_start_date date,  
			land_rent_end_date date,
			land_rent_period bigint,
			land_category bigint,
			building_structure smallint,        
			floors_above_ground smallint,
			floors_under_ground smallint,
			asset_management_stopped smallint,
			completion_date date,  
			rebuilt_display_count bigint,
			newly_built boolean,
			rebuilt_date_1 date, 
			rebuilt_date_2 date, 
			rebuilt_date_3 date, 
			rebuilt_date_4 date, 
			rebuilt_date_5 date, 
			rebuilt_date_6 date, 
			rebuilt_date_7 date, 
			rebuilt_date_8 date, 
			rebuilt_date_9 date, 
			rebuilt_date_10 date,  
			total_units bigint,
			number_of_consecutive_buildings smallint,        
			method_of_area_measurement smallint,
			land_area_per_register double precision,
			land_area_per_measurement double precision,
			building_area_per_measurement double precision,
			building_area_per_register double precision,
			building_coverage double precision,
			floor_area_ratio double precision,
			area_classification smallint,
			fire_protection_specified smallint,
			certificate_of_completion smallint,
			management_type smallint,
			management_fee double precision,
			display_count bigint,
			zoning_no1 smallint,      
			zoning_no2 smallint,       
			zoning_no3 smallint,       
			zoning_no4 smallint,       
			zoning_no5 smallint,       
			zoning_no6 smallint,       
			zoning_no7 smallint,       
			zoning_no8 smallint,       
			zoning_no9 smallint,       
			zoning_no10 smallint,        
			zoning_no11 smallint,
			zoning_no12 smallint,
			zoning_no13 smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			leasable_area double precision,
			japan_flag smallint,
			leasable_area_tsubo double precision,
			land_area_per_register_tsubo double precision,
			land_area_per_measurement_tsubo double precision,
			building_area_per_measurement_tsubo double precision,
			building_area_per_register_tsubo double precision,
			pm_id smallint)
		LEFT JOIN country X ON X.original_id = linktable.country_id AND X.pm_id = rec1.id
		LEFT JOIN payee_vendor Y ON Y.original_id = linktable.developer_name_id AND Y.original_id = linktable.designer_name_id AND Y.original_id = linktable.construction_company_name_id AND Y.pm_id = rec1.id;
		--WHERE X.pm_id = rec1.id;
	   
            	END CASE;

		--owner (child of country)
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO owner (original_id, mailing_country, residence_country_id, nationality_country_id, bank_country_id, gender, tel, spare_phone_number, birth_date, postal_code, land_lot_no, house_no, mobile, mailing_postal_code, mailing_prefecture, same_as_residence_flag, mailing_city, mailing_land_lot_no, mailing_tel, email, external_owner_id, created_at, updated_at, created_by, updated_by, remittance_month, remittance_date, pay_at_month_end, corp_flag, admin_tel, social_security_number, taxpayer_number, pm_id) 	
		SELECT linktable.id,
			CASE WHEN linktable.mailing_country IS NULL THEN NULL ELSE X.id END,
			CASE WHEN linktable.residence_country_id IS NULL THEN NULL ELSE X.id END,
			CASE WHEN linktable.nationality_country_id IS NULL THEN NULL ELSE X.id END,
			CASE WHEN linktable.bank_country_id IS NULL THEN NULL ELSE X.id END,
			--X.id,			
			--X.id,
			--X.id,
			--X.id,
			linktable.gender,
			linktable.tel,
			linktable.spare_phone_number,
			linktable.birth_date,
			linktable.postal_code,
			linktable.land_lot_no,
			linktable.house_no,
			linktable.mobile,
			linktable.mailing_postal_code,
			linktable.mailing_prefecture,
			linktable.same_as_residence_flag,
			linktable.mailing_city,
			linktable.mailing_land_lot_no,
			linktable.mailing_tel,
			linktable.email,
			linktable.external_owner_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.remittance_month,
			linktable.remittance_date,
			linktable.pay_at_month_end,
			linktable.corp_flag,
			linktable.admin_tel,
			linktable.social_security_number,
			linktable.taxpayer_number,
			linktable.pm_id        
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, mailing_country, residence_country_id, nationality_country_id, bank_country_id, gender, tel, spare_phone_number, birth_date, postal_code, land_lot_no, house_no, mobile, mailing_postal_code, mailing_prefecture, same_as_residence_flag, mailing_city, mailing_land_lot_no, mailing_tel, email, external_owner_id, created_at, updated_at, created_by, updated_by, remittance_month, remittance_date, pay_at_month_end, corp_flag, admin_tel, social_security_number, taxpayer_number, ' || rec1.id || ' FROM owner') AS
		linktable 
			(id bigint,
			mailing_country bigint,
			residence_country_id bigint,
			nationality_country_id bigint,
			bank_country_id bigint,
			gender smallint,
			tel character varying(32),
			spare_phone_number character varying(32),
			birth_date date,
			postal_code character varying(32),
			land_lot_no character varying(32),
			house_no character varying(32),
			mobile character varying(32),
			mailing_postal_code character varying(32),
			mailing_prefecture character varying(32),
			same_as_residence_flag boolean,
			mailing_city character varying(32),
			mailing_land_lot_no character varying(32),
			mailing_tel character varying(32),
			email character varying(255),
			external_owner_id character varying(32),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			remittance_month character varying(255),
			remittance_date bigint,
			pay_at_month_end boolean,
			corp_flag smallint,
			admin_tel character varying(64),
			social_security_number character varying(64),
			taxpayer_number character varying(64),
			pm_id smallint)
		LEFT JOIN country X ON (X.original_id = linktable.mailing_country OR X.original_id = linktable.residence_country_id OR
				X.original_id = linktable.nationality_country_id OR X.original_id = linktable.bank_country_id) AND X.pm_id = rec1.id;  
			--WHERE X.pm_id = rec1.id;
		ELSE
		INSERT INTO owner (original_id, mailing_country, residence_country_id, nationality_country_id, bank_country_id, gender, tel, spare_phone_number, birth_date, postal_code, land_lot_no, house_no, mobile, mailing_postal_code, mailing_prefecture, same_as_residence_flag, mailing_city, mailing_land_lot_no, mailing_tel, email, external_owner_id, created_at, updated_at, created_by, updated_by, remittance_month, remittance_date, pay_at_month_end, corp_flag, admin_tel, social_security_number, taxpayer_number, other_cost1, other_cost2, other_cost3, other_cost4, other_cost5, other_cost6, other_cost7, other_cost8, other_cost9, other_cost10, other_cost_not_owner_income1, other_cost_not_owner_income2, other_cost_not_owner_income3, other_cost_not_owner_income4, other_cost_not_owner_income5, other_cost_not_owner_income6, other_cost_not_owner_income7, other_cost_not_owner_income8, other_cost_not_owner_income9, other_cost_not_owner_income10, pm_id) 	
		SELECT 	linktable.id,
			CASE WHEN linktable.mailing_country IS NULL THEN NULL ELSE X.id END,
			CASE WHEN linktable.residence_country_id IS NULL THEN NULL ELSE X.id END,
			CASE WHEN linktable.nationality_country_id IS NULL THEN NULL ELSE X.id END,
			CASE WHEN linktable.bank_country_id IS NULL THEN NULL ELSE X.id END,
			--X.id,			
			--X.id,
			--X.id,
			--X.id,
			linktable.gender,
			linktable.tel,
			linktable.spare_phone_number,
			linktable.birth_date,           
			linktable.postal_code,                   
			linktable.land_lot_no,                  
			linktable.house_no,                  
			linktable.mobile,                     
			linktable.mailing_postal_code,
			linktable.mailing_prefecture,          
			linktable.same_as_residence_flag,
			linktable.mailing_city,       
			linktable.mailing_land_lot_no,
			linktable.mailing_tel,          
			linktable.email,
			linktable.external_owner_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.remittance_month,
			linktable.remittance_date,
			linktable.pay_at_month_end,
			linktable.corp_flag,
			linktable.admin_tel,
			linktable.social_security_number,
			linktable.taxpayer_number,
			linktable.other_cost1,
			linktable.other_cost2,
			linktable.other_cost3,
			linktable.other_cost4,
			linktable.other_cost5,
			linktable.other_cost6,
			linktable.other_cost7,
			linktable.other_cost8,
			linktable.other_cost9,
			linktable.other_cost10,
			linktable.other_cost_not_owner_income1,  
			linktable.other_cost_not_owner_income2, 
			linktable.other_cost_not_owner_income3, 
			linktable.other_cost_not_owner_income4, 
			linktable.other_cost_not_owner_income5, 
			linktable.other_cost_not_owner_income6, 
			linktable.other_cost_not_owner_income7, 
			linktable.other_cost_not_owner_income8, 
			linktable.other_cost_not_owner_income9, 
			linktable.other_cost_not_owner_income10, 
			linktable.pm_id                         
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, mailing_country, residence_country_id, nationality_country_id, bank_country_id, gender, tel, spare_phone_number, birth_date, postal_code, land_lot_no, house_no, mobile, mailing_postal_code, mailing_prefecture, same_as_residence_flag, mailing_city, mailing_land_lot_no, mailing_tel, email, external_owner_id, created_at, updated_at, created_by, updated_by, remittance_month, remittance_date, pay_at_month_end, corp_flag, admin_tel, social_security_number, taxpayer_number, other_cost1, other_cost2, other_cost3, other_cost4, other_cost5, other_cost6, other_cost7, other_cost8, other_cost9, other_cost10, other_cost_not_owner_income1, other_cost_not_owner_income2, other_cost_not_owner_income3, other_cost_not_owner_income4, other_cost_not_owner_income5, other_cost_not_owner_income6, other_cost_not_owner_income7, other_cost_not_owner_income8, other_cost_not_owner_income9, other_cost_not_owner_income10, ' || rec1.id || ' FROM owner') AS
		linktable 
			(id bigint,
			mailing_country bigint,
			residence_country_id bigint,
			nationality_country_id bigint,
			bank_country_id bigint,
			gender smallint,
			tel character varying(32),
			spare_phone_number character varying(32),
			birth_date date,
			postal_code character varying(32),
			land_lot_no character varying(32),
			house_no character varying(32),
			mobile character varying(32),
			mailing_postal_code character varying(32),
			mailing_prefecture character varying(32),
			same_as_residence_flag boolean,
			mailing_city character varying(32),
			mailing_land_lot_no character varying(32),
			mailing_tel character varying(32),
			email character varying(255),
			external_owner_id character varying(32),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			remittance_month character varying(255),
			remittance_date bigint,
			pay_at_month_end boolean,
			corp_flag smallint,
			admin_tel character varying(64),
			social_security_number character varying(64),
			taxpayer_number character varying(64),
			other_cost1 double precision,
			other_cost2 double precision,
			other_cost3 double precision,
			other_cost4 double precision,
			other_cost5 double precision,
			other_cost6 double precision,
			other_cost7 double precision,
			other_cost8 double precision,
			other_cost9 double precision,
			other_cost10 double precision,
			other_cost_not_owner_income1 double precision,         
			other_cost_not_owner_income2 double precision,         
			other_cost_not_owner_income3 double precision,         
			other_cost_not_owner_income4 double precision,
			other_cost_not_owner_income5 double precision,
			other_cost_not_owner_income6 double precision,
			other_cost_not_owner_income7 double precision,
			other_cost_not_owner_income8 double precision,
			other_cost_not_owner_income9 double precision,
			other_cost_not_owner_income10 double precision,
			pm_id smallint)
		LEFT JOIN country X ON (X.original_id = linktable.mailing_country OR X.original_id = linktable.residence_country_id OR
				X.original_id = linktable.nationality_country_id OR X.original_id = linktable.bank_country_id) AND X.pm_id = rec1.id; 
			--WHERE X.pm_id = rec1.id;
		END CASE;

		--tenant
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO tenant (original_id, country_id, corp_flag, withholding_tax_flag, gender, birth_date, tel_main, tel_sub, email, identity_type, identity_number, bank_code, branch_code, bank_account_number, bank_account_holder, bank_account_type, external_tenant_id, created_at, updated_at, created_by, updated_by, pm_id) 	
		SELECT 	linktable.id,
			X.id,
			linktable.corp_flag,
			linktable.withholding_tax_flag,
			linktable.gender,
			linktable.birth_date,
			linktable.tel_main,
			linktable.tel_sub,
			linktable.email,
			linktable.identity_type,
			linktable.identity_number,
			linktable.bank_code,
			linktable.branch_code,
			linktable.bank_account_number,
			linktable.bank_account_holder,
			linktable.bank_account_type,
			linktable.external_tenant_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.pm_id 	 	                        
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, country_id, corp_flag, withholding_tax_flag, gender, birth_date, tel_main, tel_sub, email, identity_type, identity_number, bank_code, branch_code, bank_account_number, bank_account_holder, bank_account_type, external_tenant_id, created_at, updated_at, created_by, updated_by, ' || rec1.id || ' FROM tenant') AS
		linktable 
			(id bigint,
			country_id bigint,
			corp_flag smallint,
			withholding_tax_flag smallint,
			gender smallint,
			birth_date date,
			tel_main character varying(32),
			tel_sub character varying(32),
			email character varying(255),
			identity_type bigint,
			identity_number character varying(64),
			bank_code character varying(16),
			branch_code character varying(16),
			bank_account_number character varying(16),
			bank_account_holder character varying(32),
			bank_account_type character varying(32),
			external_tenant_id character varying(32),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			pm_id smallint)
		LEFT JOIN country X ON X.original_id = linktable.country_id AND X.pm_id = rec1.id; 
			--WHERE X.pm_id = rec1.id;
	
		ELSE
		INSERT INTO tenant (original_id, country_id, corp_flag, withholding_tax_flag, gender, birth_date, tel_main, tel_sub, email, identity_type, identity_number, bank_code, branch_code, bank_account_number, bank_account_holder, bank_account_type, external_tenant_id, created_at, updated_at, created_by, updated_by, other_cost1, other_cost2, other_cost3, other_cost4, other_cost5, other_cost6, other_cost7, other_cost8, other_cost9, other_cost10, other_cost_not_owner_income1, other_cost_not_owner_income2, other_cost_not_owner_income3, other_cost_not_owner_income4, other_cost_not_owner_income5, other_cost_not_owner_income6, other_cost_not_owner_income7, other_cost_not_owner_income8, other_cost_not_owner_income9, other_cost_not_owner_income10, pm_id) 	
		SELECT 	linktable.id,
			X.id,
			linktable.corp_flag,
			linktable.withholding_tax_flag,
			linktable.gender,
			linktable.birth_date,
			linktable.tel_main,
			linktable.tel_sub,
			linktable.email,
			linktable.identity_type,
			linktable.identity_number,
			linktable.bank_code,
			linktable.branch_code,
			linktable.bank_account_number,
			linktable.bank_account_holder,
			linktable.bank_account_type,
			linktable.external_tenant_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.other_cost1,
			linktable.other_cost2,
			linktable.other_cost3,
			linktable.other_cost4,
			linktable.other_cost5,
			linktable.other_cost6,
			linktable.other_cost7,
			linktable.other_cost8,
			linktable.other_cost9,
			linktable.other_cost10,
			linktable.other_cost_not_owner_income1,
			linktable.other_cost_not_owner_income2,
			linktable.other_cost_not_owner_income3,
			linktable.other_cost_not_owner_income4,
			linktable.other_cost_not_owner_income5,
			linktable.other_cost_not_owner_income6,
			linktable.other_cost_not_owner_income7,
			linktable.other_cost_not_owner_income8,
			linktable.other_cost_not_owner_income9,
			linktable.other_cost_not_owner_income10,
			linktable.pm_id 	                        
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, country_id, corp_flag, withholding_tax_flag, gender, birth_date, tel_main, tel_sub, email, identity_type, identity_number, bank_code, branch_code, bank_account_number, bank_account_holder, bank_account_type, external_tenant_id, created_at, updated_at, created_by, updated_by, other_cost1, other_cost2, other_cost3, other_cost4, other_cost5, other_cost6, other_cost7, other_cost8, other_cost9, other_cost10, other_cost_not_owner_income1, other_cost_not_owner_income2, other_cost_not_owner_income3, other_cost_not_owner_income4, other_cost_not_owner_income5, other_cost_not_owner_income6, other_cost_not_owner_income7, other_cost_not_owner_income8, other_cost_not_owner_income9, other_cost_not_owner_income10, ' || rec1.id || ' FROM tenant') AS
		linktable 
			(id bigint,
			country_id bigint,
			corp_flag smallint,
			withholding_tax_flag smallint,
			gender smallint,
			birth_date date,
			tel_main character varying(32),
			tel_sub character varying(32),
			email character varying(255),
			identity_type bigint,
			identity_number character varying(64),
			bank_code character varying(16),
			branch_code character varying(16),
			bank_account_number character varying(16),
			bank_account_holder character varying(32),
			bank_account_type character varying(32),
			external_tenant_id character varying(32),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			other_cost1 double precision,
			other_cost2 double precision,
			other_cost3 double precision,
			other_cost4 double precision,
			other_cost5 double precision,
			other_cost6 double precision,
			other_cost7 double precision,
			other_cost8 double precision,
			other_cost9 double precision,
			other_cost10 double precision,
			other_cost_not_owner_income1 double precision,
			other_cost_not_owner_income2 double precision,
			other_cost_not_owner_income3 double precision,
			other_cost_not_owner_income4 double precision,
			other_cost_not_owner_income5 double precision,
			other_cost_not_owner_income6 double precision,
			other_cost_not_owner_income7 double precision,
			other_cost_not_owner_income8 double precision,
			other_cost_not_owner_income9 double precision,
			other_cost_not_owner_income10 double precision,
			pm_id smallint)
		LEFT JOIN country X ON X.original_id = linktable.country_id AND X.pm_id = rec1.id; 
			--WHERE X.pm_id = rec1.id;

		END CASE;

		--owner_bank_info
		INSERT INTO owner_bank_info (original_id, owner_id, bank_country_id, bank_code, branch_code, bank_swift, bank_currency, bank_account_type, account_type, account_number, created_at, updated_at, created_by, updated_by, pm_id) 
			SELECT 	linktable.id,
				Y.id,
				X.id,
				linktable.bank_code,
				linktable.branch_code,
				linktable.bank_swift,
				linktable.bank_currency,
				linktable.bank_account_type,
				linktable.account_type,
				linktable.account_number,
				linktable.created_at,
				linktable.updated_at,
				linktable.created_by,
				linktable.updated_by,
				linktable.pm_id 
			FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, owner_id, bank_country_id, bank_code, branch_code, bank_swift, bank_currency, bank_account_type, account_type, account_number, created_at, updated_at, created_by, updated_by, ' || rec1.id || ' FROM owner_bank_info') AS
			linktable 
				(id bigint,
				owner_id bigint,
				bank_country_id bigint,
				bank_code character varying(64),
				branch_code character varying(64),
				bank_swift character varying(64),
				bank_currency character varying(64),
				bank_account_type bigint,
				account_type character varying(64),
				account_number character varying(255),
				created_at timestamp with time zone,
				updated_at timestamp with time zone,
				created_by bigint,
				updated_by bigint,
				pm_id smallint)
			LEFT JOIN country X ON X.original_id = linktable.bank_country_id AND X.pm_id = rec1.id
			LEFT JOIN owner Y ON Y.original_id = linktable.owner_id AND Y.pm_id = rec1.id;
			--WHERE X.pm_id = rec1.id;

		--owner_bank_info_intl
		CASE rec1.description
		WHEN 'assistasset_stag', 'm0001_stag' THEN
		INSERT INTO owner_bank_info_intl (owner_bank_info_id, name, address, branch_name, account_holder, language_id, created_at, updated_at, created_by, updated_by) 	
		SELECT 	X.id,
			linktable.name,
			linktable.address,
			linktable.branch_name,
			linktable.account_holder,
			linktable.language_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT owner_bank_info_id, name, address, branch_name, account_holder, language_id, created_at, updated_at, created_by, updated_by FROM owner_bank_info_intl') AS
		linktable 
			(owner_bank_info_id bigint,
			name character varying(255),
			address character varying(255),
			branch_name character varying(255),
			account_holder character varying(255),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint)
		LEFT JOIN owner_bank_info X ON X.original_id = linktable.owner_bank_info_id AND X.pm_id = rec1.id;
			--WHERE X.pm_id = rec1.id;
		ELSE
		INSERT INTO owner_bank_info_intl (owner_bank_info_id, name, address, branch_name, account_holder, language_id, created_at, updated_at, created_by, updated_by, remarks) 	
		SELECT 	X.id,
			linktable.name,
			linktable.address,
			linktable.branch_name,
			linktable.account_holder,
			linktable.language_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.remarks 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT owner_bank_info_id, name, address, branch_name, account_holder, language_id, created_at, updated_at, created_by, updated_by, remarks FROM owner_bank_info_intl') AS
		linktable 
			(owner_bank_info_id bigint,
			name character varying(255),
			address character varying(255),
			branch_name character varying(255),
			account_holder character varying(255),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			remarks character varying(255))
		LEFT JOIN owner_bank_info X ON X.original_id = linktable.owner_bank_info_id AND X.pm_id = rec1.id;
			--WHERE X.pm_id = rec1.id;
		END CASE;


		--room
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO room (original_id, property_id, developer_name_id, construction_company_name_id, external_room_id, room_number, room_type, room_category, room_category_detail, floors_located, bedroom_count, bathroom_count, storeroom_count, balcony_direction_1, balcony_area_actual_measurement_1, balcony_registered_area_1, balcony_direction_2, balcony_area_actual_measurement_2, balcony_registered_area_2, balcony_direction_3, balcony_area_actual_measurement_3, balcony_registered_area_3, balcony_direction_4, balcony_area_actual_measurement_4, balcony_registered_area_4, balcony_direction_5, balcony_area_actual_measurement_5, balcony_registered_area_5, balcony_direction_6, balcony_area_actual_measurement_6, balcony_registered_area_6, balcony_direction_7, balcony_area_actual_measurement_7, balcony_registered_area_7, balcony_direction_8, balcony_area_actual_measurement_8, balcony_registered_area_8, exclusive_area_actual_measurement, exclusive_area_registered, exclusive_garden_area_actual_measurement, exclusive_garden_area_registered, management_type, management_fee, floor_plan, floor_plan_display_name, one_room, floor_plan_roomcount, floor_plan_type, room1_floor, room1_type, room1_area, room2_floor, room2_type, room2_area, room3_floor, room3_type, room3_area, room4_floor, room4_type, room4_area, room5_floor, room5_type, room5_area, room6_floor, room6_type, room6_area, room7_floor, room7_type, room7_area, room8_floor, room8_type, room8_area, room9_floor, room9_type, room9_area, tenant_status, payment_status, created_at, updated_at, created_by, updated_by, n_rooms, n_half_bathrooms, parking, garage, heating, cooling, n_cars_parking, n_cars_garage, pm_id) 	
		SELECT  linktable.id,
			X.id,
			Y.id,
			Y.id,
			linktable.external_room_id,
			linktable.room_number,
			linktable.room_type,
			linktable.room_category,
			linktable.room_category_detail,
			linktable.floors_located,
			linktable.bedroom_count,
			linktable.bathroom_count,
			linktable.storeroom_count,
			linktable.balcony_direction_1,
			linktable.balcony_area_actual_measurement_1,
			linktable.balcony_registered_area_1,
			linktable.balcony_direction_2,
			linktable.balcony_area_actual_measurement_2,
			linktable.balcony_registered_area_2,
			linktable.balcony_direction_3,
			linktable.balcony_area_actual_measurement_3,
			linktable.balcony_registered_area_3,
			linktable.balcony_direction_4,
			linktable.balcony_area_actual_measurement_4,
			linktable.balcony_registered_area_4,
			linktable.balcony_direction_5,
			linktable.balcony_area_actual_measurement_5,
			linktable.balcony_registered_area_5,
			linktable.balcony_direction_6,
			linktable.balcony_area_actual_measurement_6,
			linktable.balcony_registered_area_6,
			linktable.balcony_direction_7,
			linktable.balcony_area_actual_measurement_7,
			linktable.balcony_registered_area_7,
			linktable.balcony_direction_8,
			linktable.balcony_area_actual_measurement_8,
			linktable.balcony_registered_area_8,
			linktable.exclusive_area_actual_measurement,
			linktable.exclusive_area_registered,
			linktable.exclusive_garden_area_actual_measurement,
			linktable.exclusive_garden_area_registered,
			linktable.management_type,
			linktable.management_fee,
			linktable.floor_plan,
			linktable.floor_plan_display_name,
			linktable.one_room,
			linktable.floor_plan_roomcount,
			linktable.floor_plan_type,
			linktable.room1_floor,
			linktable.room1_type,
			linktable.room1_area,
			linktable.room2_floor,
			linktable.room2_type,
			linktable.room2_area,
			linktable.room3_floor,
			linktable.room3_type,
			linktable.room3_area,
			linktable.room4_floor,
			linktable.room4_type,
			linktable.room4_area,
			linktable.room5_floor,
			linktable.room5_type,
			linktable.room5_area,
			linktable.room6_floor,
			linktable.room6_type,
			linktable.room6_area,
			linktable.room7_floor,
			linktable.room7_type,
			linktable.room7_area,
			linktable.room8_floor,
			linktable.room8_type,
			linktable.room8_area,
			linktable.room9_floor,
			linktable.room9_type,
			linktable.room9_area,
			linktable.tenant_status,
			linktable.payment_status,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.n_rooms,
			linktable.n_half_bathrooms,
			linktable.parking,
			linktable.garage,
			linktable.heating,
			linktable.cooling,
			linktable.n_cars_parking,
			linktable.n_cars_garage,
			linktable.pm_id	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, property_id, developer_name_id, construction_company_name_id, external_room_id, room_number, room_type, room_category, room_category_detail, floors_located, bedroom_count, bathroom_count, storeroom_count, balcony_direction_1, balcony_area_actual_measurement_1, balcony_registered_area_1, balcony_direction_2, balcony_area_actual_measurement_2, balcony_registered_area_2, balcony_direction_3, balcony_area_actual_measurement_3, balcony_registered_area_3, balcony_direction_4, balcony_area_actual_measurement_4, balcony_registered_area_4, balcony_direction_5, balcony_area_actual_measurement_5, balcony_registered_area_5, balcony_direction_6, balcony_area_actual_measurement_6, balcony_registered_area_6, balcony_direction_7, balcony_area_actual_measurement_7, balcony_registered_area_7, balcony_direction_8, balcony_area_actual_measurement_8, balcony_registered_area_8, exclusive_area_actual_measurement, exclusive_area_registered, exclusive_garden_area_actual_measurement, exclusive_garden_area_registered, management_type, management_fee, floor_plan, floor_plan_display_name, one_room, floor_plan_roomcount, floor_plan_type, room1_floor, room1_type, room1_area, room2_floor, room2_type, room2_area, room3_floor, room3_type, room3_area, room4_floor, room4_type, room4_area, room5_floor, room5_type, room5_area, room6_floor, room6_type, room6_area, room7_floor, room7_type, room7_area, room8_floor, room8_type, room8_area, room9_floor, room9_type, room9_area, tenant_status, payment_status, created_at, updated_at, created_by, updated_by, n_rooms, n_half_bathrooms, parking, garage, heating, cooling, n_cars_parking, n_cars_garage, ' || rec1.id || ' FROM room') AS
		linktable 
			(id bigint, 
			property_id bigint,  
			developer_name_id bigint,   
			construction_company_name_id bigint,   
			external_room_id character varying(32),    
			room_number character varying(32),    
			room_type smallint, 
			room_category smallint, 
			room_category_detail smallint, 
			floors_located smallint,
			bedroom_count smallint, 
			bathroom_count smallint, 
			storeroom_count smallint, 
			balcony_direction_1 smallint, 
			balcony_area_actual_measurement_1 double precision, 
			balcony_registered_area_1 double precision, 
			balcony_direction_2 smallint, 
			balcony_area_actual_measurement_2 double precision, 
			balcony_registered_area_2 double precision,
			balcony_direction_3 smallint, 
			balcony_area_actual_measurement_3 double precision, 
			balcony_registered_area_3 double precision,
			balcony_direction_4 smallint, 
			balcony_area_actual_measurement_4 double precision,
			balcony_registered_area_4 double precision,
			balcony_direction_5 smallint,
			balcony_area_actual_measurement_5 double precision,
			balcony_registered_area_5 double precision,
			balcony_direction_6 smallint,
			balcony_area_actual_measurement_6 double precision,
			balcony_registered_area_6 double precision,
			balcony_direction_7 smallint,
			balcony_area_actual_measurement_7 double precision,
			balcony_registered_area_7 double precision,
			balcony_direction_8 smallint,
			balcony_area_actual_measurement_8 double precision,
			balcony_registered_area_8 double precision,
			exclusive_area_actual_measurement double precision,
			exclusive_area_registered double precision,
			exclusive_garden_area_actual_measurement double precision,
			exclusive_garden_area_registered double precision,
			management_type smallint,
			management_fee double precision,
			floor_plan  character varying(255),
			floor_plan_display_name character varying(255),
			one_room boolean,
			floor_plan_roomcount smallint,
			floor_plan_type character varying(45),
			room1_floor smallint,
			room1_type smallint,
			room1_area double precision,
			room2_floor smallint,
			room2_type smallint,
			room2_area double precision,
			room3_floor smallint,
			room3_type smallint,
			room3_area double precision,
			room4_floor smallint,
			room4_type smallint,
			room4_area double precision,
			room5_floor smallint,
			room5_type smallint,
			room5_area double precision,
			room6_floor smallint,
			room6_type smallint,
			room6_area double precision,
			room7_floor smallint,
			room7_type smallint,
			room7_area double precision,
			room8_floor smallint,
			room8_type smallint,
			room8_area double precision,
			room9_floor smallint,
			room9_type smallint,
			room9_area double precision,
			tenant_status smallint,
			payment_status smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			n_rooms smallint,
			n_half_bathrooms smallint,
			parking smallint,
			garage smallint,
			heating smallint,
			cooling smallint,
			n_cars_parking smallint,
			n_cars_garage smallint,
			pm_id smallint)
		LEFT JOIN property X ON X.original_id = linktable.property_id AND X.pm_id = rec1.id 
		LEFT JOIN payee_vendor Y ON (Y.original_id = linktable.developer_name_id OR Y.original_id = linktable.construction_company_name_id) AND Y.pm_id = rec1.id;
		--WHERE X.pm_id = rec1.id;
		ELSE
		INSERT INTO room (original_id, property_id, developer_name_id, construction_company_name_id, external_room_id, room_number, room_type, room_category, room_category_detail, floors_located, bedroom_count, bathroom_count, storeroom_count, balcony_direction_1, balcony_area_actual_measurement_1, balcony_registered_area_1, balcony_direction_2, balcony_area_actual_measurement_2, balcony_registered_area_2, balcony_direction_3, balcony_area_actual_measurement_3, balcony_registered_area_3, balcony_direction_4, balcony_area_actual_measurement_4, balcony_registered_area_4, balcony_direction_5, balcony_area_actual_measurement_5, balcony_registered_area_5, balcony_direction_6, balcony_area_actual_measurement_6, balcony_registered_area_6, balcony_direction_7, balcony_area_actual_measurement_7, balcony_registered_area_7, balcony_direction_8, balcony_area_actual_measurement_8, balcony_registered_area_8, exclusive_area_actual_measurement, exclusive_area_registered, exclusive_garden_area_actual_measurement, exclusive_garden_area_registered, management_type, management_fee, floor_plan, floor_plan_display_name, one_room, floor_plan_roomcount, floor_plan_type, room1_floor, room1_type, room1_area, room2_floor, room2_type, room2_area, room3_floor, room3_type, room3_area, room4_floor, room4_type, room4_area, room5_floor, room5_type, room5_area, room6_floor, room6_type, room6_area, room7_floor, room7_type, room7_area, room8_floor, room8_type, room8_area, room9_floor, room9_type, room9_area, tenant_status, payment_status, created_at, updated_at, created_by, updated_by, n_rooms, n_half_bathrooms, parking, garage, heating, cooling, n_cars_parking, n_cars_garage, balcony_area_actual_measurement_1_tsubo, balcony_registered_area_1_tsubo, balcony_area_actual_measurement_2_tsubo, balcony_registered_area_2_tsubo, balcony_area_actual_measurement_3_tsubo, balcony_registered_area_3_tsubo, balcony_area_actual_measurement_4_tsubo, balcony_registered_area_4_tsubo, balcony_area_actual_measurement_5_tsubo, balcony_registered_area_5_tsubo, balcony_area_actual_measurement_6_tsubo, balcony_registered_area_6_tsubo, balcony_area_actual_measurement_7_tsubo, balcony_registered_area_7_tsubo, balcony_area_actual_measurement_8_tsubo, balcony_registered_area_8_tsubo, exclusive_area_actual_measurement_tsubo, exclusive_area_registered_tsubo, exclusive_garden_area_actual_measurement_tsubo, exclusive_garden_area_registered_tsubo, pm_id) 	
		SELECT  linktable.id,
			X.id,
			Y.id,
			Y.id,
			linktable.external_room_id,
			linktable.room_number,
			linktable.room_type,
			linktable.room_category,
			linktable.room_category_detail,
			linktable.floors_located,
			linktable.bedroom_count,
			linktable.bathroom_count,
			linktable.storeroom_count,
			linktable.balcony_direction_1,
			linktable.balcony_area_actual_measurement_1,
			linktable.balcony_registered_area_1,
			linktable.balcony_direction_2,
			linktable.balcony_area_actual_measurement_2,
			linktable.balcony_registered_area_2,
			linktable.balcony_direction_3,
			linktable.balcony_area_actual_measurement_3,
			linktable.balcony_registered_area_3,
			linktable.balcony_direction_4,
			linktable.balcony_area_actual_measurement_4,
			linktable.balcony_registered_area_4,
			linktable.balcony_direction_5,
			linktable.balcony_area_actual_measurement_5,
			linktable.balcony_registered_area_5,
			linktable.balcony_direction_6,
			linktable.balcony_area_actual_measurement_6,
			linktable.balcony_registered_area_6,
			linktable.balcony_direction_7,
			linktable.balcony_area_actual_measurement_7,
			linktable.balcony_registered_area_7,
			linktable.balcony_direction_8,
			linktable.balcony_area_actual_measurement_8,
			linktable.balcony_registered_area_8,
			linktable.exclusive_area_actual_measurement,
			linktable.exclusive_area_registered,
			linktable.exclusive_garden_area_actual_measurement,
			linktable.exclusive_garden_area_registered,
			linktable.management_type,
			linktable.management_fee,
			linktable.floor_plan,
			linktable.floor_plan_display_name,
			linktable.one_room,
			linktable.floor_plan_roomcount,
			linktable.floor_plan_type,
			linktable.room1_floor,
			linktable.room1_type,
			linktable.room1_area,
			linktable.room2_floor,
			linktable.room2_type,
			linktable.room2_area,
			linktable.room3_floor,
			linktable.room3_type,
			linktable.room3_area,
			linktable.room4_floor,
			linktable.room4_type,
			linktable.room4_area,
			linktable.room5_floor,
			linktable.room5_type,
			linktable.room5_area,
			linktable.room6_floor,
			linktable.room6_type,
			linktable.room6_area,
			linktable.room7_floor,
			linktable.room7_type,
			linktable.room7_area,
			linktable.room8_floor,
			linktable.room8_type,
			linktable.room8_area,
			linktable.room9_floor,
			linktable.room9_type,
			linktable.room9_area,
			linktable.tenant_status,
			linktable.payment_status,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.n_rooms,
			linktable.n_half_bathrooms,
			linktable.parking,
			linktable.garage,
			linktable.heating,
			linktable.cooling,
			linktable.n_cars_parking,
			linktable.n_cars_garage,
			linktable.balcony_area_actual_measurement_1_tsubo,
			linktable.balcony_registered_area_1_tsubo,
			linktable.balcony_area_actual_measurement_2_tsubo,
			linktable.balcony_registered_area_2_tsubo,
			linktable.balcony_area_actual_measurement_3_tsubo,
			linktable.balcony_registered_area_3_tsubo,
			linktable.balcony_area_actual_measurement_4_tsubo,
			linktable.balcony_registered_area_4_tsubo,
			linktable.balcony_area_actual_measurement_5_tsubo,
			linktable.balcony_registered_area_5_tsubo,
			linktable.balcony_area_actual_measurement_6_tsubo,
			linktable.balcony_registered_area_6_tsubo,
			linktable.balcony_area_actual_measurement_7_tsubo,
			linktable.balcony_registered_area_7_tsubo,
			linktable.balcony_area_actual_measurement_8_tsubo,
			linktable.balcony_registered_area_8_tsubo,
			linktable.exclusive_area_actual_measurement_tsubo,
			linktable.exclusive_area_registered_tsubo,
			linktable.exclusive_garden_area_actual_measurement_tsubo,
			linktable.exclusive_garden_area_registered_tsubo,
			linktable.pm_id	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, property_id, developer_name_id, construction_company_name_id, external_room_id, room_number, room_type, room_category, room_category_detail, floors_located, bedroom_count, bathroom_count, storeroom_count, balcony_direction_1, balcony_area_actual_measurement_1, balcony_registered_area_1, balcony_direction_2, balcony_area_actual_measurement_2, balcony_registered_area_2, balcony_direction_3, balcony_area_actual_measurement_3, balcony_registered_area_3, balcony_direction_4, balcony_area_actual_measurement_4, balcony_registered_area_4, balcony_direction_5, balcony_area_actual_measurement_5, balcony_registered_area_5, balcony_direction_6, balcony_area_actual_measurement_6, balcony_registered_area_6, balcony_direction_7, balcony_area_actual_measurement_7, balcony_registered_area_7, balcony_direction_8, balcony_area_actual_measurement_8, balcony_registered_area_8, exclusive_area_actual_measurement, exclusive_area_registered, exclusive_garden_area_actual_measurement, exclusive_garden_area_registered, management_type, management_fee, floor_plan, floor_plan_display_name, one_room, floor_plan_roomcount, floor_plan_type, room1_floor, room1_type, room1_area, room2_floor, room2_type, room2_area, room3_floor, room3_type, room3_area, room4_floor, room4_type, room4_area, room5_floor, room5_type, room5_area, room6_floor, room6_type, room6_area, room7_floor, room7_type, room7_area, room8_floor, room8_type, room8_area, room9_floor, room9_type, room9_area, tenant_status, payment_status, created_at, updated_at, created_by, updated_by, n_rooms, n_half_bathrooms, parking, garage, heating, cooling, n_cars_parking, n_cars_garage, balcony_area_actual_measurement_1_tsubo, balcony_registered_area_1_tsubo, balcony_area_actual_measurement_2_tsubo, balcony_registered_area_2_tsubo, balcony_area_actual_measurement_3_tsubo, balcony_registered_area_3_tsubo, balcony_area_actual_measurement_4_tsubo, balcony_registered_area_4_tsubo, balcony_area_actual_measurement_5_tsubo, balcony_registered_area_5_tsubo, balcony_area_actual_measurement_6_tsubo, balcony_registered_area_6_tsubo, balcony_area_actual_measurement_7_tsubo, balcony_registered_area_7_tsubo, balcony_area_actual_measurement_8_tsubo, balcony_registered_area_8_tsubo, exclusive_area_actual_measurement_tsubo, exclusive_area_registered_tsubo, exclusive_garden_area_actual_measurement_tsubo, exclusive_garden_area_registered_tsubo, ' || rec1.id || ' FROM room') AS
		linktable 
			(id bigint, 
			property_id bigint,  
			developer_name_id bigint,   
			construction_company_name_id bigint,   
			external_room_id character varying(32),    
			room_number character varying(32),    
			room_type smallint, 
			room_category smallint, 
			room_category_detail smallint, 
			floors_located smallint,
			bedroom_count smallint, 
			bathroom_count smallint, 
			storeroom_count smallint, 
			balcony_direction_1 smallint, 
			balcony_area_actual_measurement_1 double precision, 
			balcony_registered_area_1 double precision, 
			balcony_direction_2 smallint, 
			balcony_area_actual_measurement_2 double precision, 
			balcony_registered_area_2 double precision,
			balcony_direction_3 smallint, 
			balcony_area_actual_measurement_3 double precision, 
			balcony_registered_area_3 double precision,
			balcony_direction_4 smallint, 
			balcony_area_actual_measurement_4 double precision,
			balcony_registered_area_4 double precision,
			balcony_direction_5 smallint,
			balcony_area_actual_measurement_5 double precision,
			balcony_registered_area_5 double precision,
			balcony_direction_6 smallint,
			balcony_area_actual_measurement_6 double precision,
			balcony_registered_area_6 double precision,
			balcony_direction_7 smallint,
			balcony_area_actual_measurement_7 double precision,
			balcony_registered_area_7 double precision,
			balcony_direction_8 smallint,
			balcony_area_actual_measurement_8 double precision,
			balcony_registered_area_8 double precision,
			exclusive_area_actual_measurement double precision,
			exclusive_area_registered double precision,
			exclusive_garden_area_actual_measurement double precision,
			exclusive_garden_area_registered double precision,
			management_type smallint,
			management_fee double precision,
			floor_plan  character varying(255),
			floor_plan_display_name character varying(255),
			one_room boolean,
			floor_plan_roomcount smallint,
			floor_plan_type character varying(45),
			room1_floor smallint,
			room1_type smallint,
			room1_area double precision,
			room2_floor smallint,
			room2_type smallint,
			room2_area double precision,
			room3_floor smallint,
			room3_type smallint,
			room3_area double precision,
			room4_floor smallint,
			room4_type smallint,
			room4_area double precision,
			room5_floor smallint,
			room5_type smallint,
			room5_area double precision,
			room6_floor smallint,
			room6_type smallint,
			room6_area double precision,
			room7_floor smallint,
			room7_type smallint,
			room7_area double precision,
			room8_floor smallint,
			room8_type smallint,
			room8_area double precision,
			room9_floor smallint,
			room9_type smallint,
			room9_area double precision,
			tenant_status smallint,
			payment_status smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			n_rooms smallint,
			n_half_bathrooms smallint,
			parking smallint,
			garage smallint,
			heating smallint,
			cooling smallint,
			n_cars_parking smallint,
			n_cars_garage smallint,
			balcony_area_actual_measurement_1_tsubo	 double precision,
			balcony_registered_area_1_tsubo   double precision,
			balcony_area_actual_measurement_2_tsubo	 double precision,
			balcony_registered_area_2_tsubo   double precision,
			balcony_area_actual_measurement_3_tsubo	 double precision, 
			balcony_registered_area_3_tsubo   double precision,
			balcony_area_actual_measurement_4_tsubo	 double precision,
			balcony_registered_area_4_tsubo   double precision,
			balcony_area_actual_measurement_5_tsubo	 double precision,
			balcony_registered_area_5_tsubo   double precision,
			balcony_area_actual_measurement_6_tsubo	 double precision,
			balcony_registered_area_6_tsubo   double precision,
			balcony_area_actual_measurement_7_tsubo	 double precision,
			balcony_registered_area_7_tsubo   double precision,
			balcony_area_actual_measurement_8_tsubo	 double precision,
			balcony_registered_area_8_tsubo   double precision,
			exclusive_area_actual_measurement_tsubo	 double precision,
			exclusive_area_registered_tsubo   double precision,
			exclusive_garden_area_actual_measurement_tsubo double precision,
			exclusive_garden_area_registered_tsubo 	 double precision,
			pm_id smallint)
		LEFT JOIN property X ON X.original_id = linktable.property_id AND X.pm_id = rec1.id 
		LEFT JOIN payee_vendor Y ON (Y.original_id = linktable.developer_name_id OR Y.original_id = linktable.construction_company_name_id) AND Y.pm_id = rec1.id;
		--WHERE X.pm_id = rec1.id;	
		END CASE;


		--rental_payment
		INSERT INTO rental_payment (original_id, room_id, tenant_id, payment_log_id, payment_date, payment_amount, status, created_at, updated_at, remarks, payment_type_id, gl_id, pm_id) 	
		SELECT 	linktable.id,
			X.id,
			Y.id,
			linktable.payment_log_id,
			linktable.payment_date,
			linktable.payment_amount,
			linktable.status,
			linktable.created_at,
			linktable.updated_at,
			linktable.remarks,
			linktable.payment_type_id,
			W.id,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, room_id, tenant_id, payment_log_id, payment_date, payment_amount, status, created_at, updated_at, remarks, payment_type_id, gl_id, ' || rec1.id || ' FROM rental_payment') AS
		linktable 
			(id bigint,
			room_id bigint,
			tenant_id bigint,
			payment_log_id bigint,
			payment_date timestamp with time zone,
			payment_amount double precision,
			status smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			remarks character varying(255),
			payment_type_id bigint,
			gl_id bigint,
			pm_id smallint)
		JOIN gl W ON W.original_id = linktable.gl_id AND W.pm_id = rec1.id
		LEFT JOIN room X ON X.original_id = linktable.room_id AND X.pm_id = rec1.id
		LEFT JOIN tenant Y ON Y.original_id = linktable.tenant_id AND Y.pm_id = rec1.id;

		
		--payment_match_publish
		CASE rec1.description
		WHEN 'assistasset_stag', 'm0001_stag', 'sonare_stag' THEN
		INSERT INTO payment_match_publish (invoice_id, rental_payment_id, matched_amount, cfstatus, gl_id, status, created_at, updated_at) 	
		SELECT 	X.id,
			Y.id,
			linktable.matched_amount,
			linktable.cfstatus,
			W.id,
			linktable.status,
			linktable.created_at,
			linktable.updated_at
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT invoice_id, rental_payment_id, matched_amount, cfstatus, gl_id, status, created_at, updated_at FROM payment_match_publish') AS
		linktable 
			(invoice_id bigint,
			rental_payment_id bigint,
			matched_amount double precision,
			cfstatus smallint,
			gl_id bigint,
			status smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone)
		JOIN gl W ON W.original_id = linktable.gl_id AND W.pm_id = rec1.id
		LEFT JOIN invoice X ON X.original_id = linktable.invoice_id AND X.pm_id = rec1.id
		LEFT JOIN rental_payment Y ON Y.original_id = linktable.rental_payment_id AND Y.pm_id = rec1.id;
	
		ELSE

		INSERT INTO payment_match_publish (invoice_id, rental_payment_id, matched_amount, cfstatus, gl_id, status, created_at, updated_at, tmp_id) 	
		SELECT 	X.id,
			Y.id,
			linktable.matched_amount,
			linktable.cfstatus,
			W.id,
			linktable.status,
			linktable.created_at,
			linktable.updated_at,
			linktable.tmp_id
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT invoice_id, rental_payment_id, matched_amount, cfstatus, gl_id, status, created_at, updated_at, tmp_id FROM payment_match_publish') AS
		linktable 
			(invoice_id bigint,
			rental_payment_id bigint,
			matched_amount double precision,
			cfstatus smallint,
			gl_id bigint,
			status smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			tmp_id bigint)
		JOIN gl W ON W.original_id = linktable.gl_id AND W.pm_id = rec1.id
		LEFT JOIN invoice X ON X.original_id = linktable.invoice_id AND X.pm_id = rec1.id
		LEFT JOIN rental_payment Y ON Y.original_id = linktable.rental_payment_id AND Y.pm_id = rec1.id;
		
		END CASE;

		--payment_match
		INSERT INTO payment_match (rental_payment_id, invoice_id, matched_amount, cfstatus, created_at, updated_at, status, gl_id) 	
		SELECT 	Y.id,
			X.id,
			linktable.matched_amount,
			linktable.cfstatus,
			linktable.created_at,
			linktable.updated_at,
			linktable.status,
			W.id
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT rental_payment_id, invoice_id, matched_amount, cfstatus, created_at, updated_at, status, gl_id FROM payment_match') AS
		linktable 
			(rental_payment_id bigint,
			invoice_id bigint,
			matched_amount double precision,
			cfstatus smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			status smallint,
			gl_id bigint)
		JOIN gl W ON W.original_id = linktable.gl_id AND W.pm_id = rec1.id
		LEFT JOIN invoice X ON X.original_id = linktable.invoice_id AND X.pm_id = rec1.id
		LEFT JOIN rental_payment Y ON Y.original_id = linktable.rental_payment_id AND Y.pm_id = rec1.id;

		--tenant_work_info
		INSERT INTO tenant_work_info (original_id, tenant_id, post_code, tel, annual_income, company_capital, stuff_size, annual_turnover, created_at, updated_at, created_by, updated_by, length_of_employment, pm_id) 	
		SELECT 	linktable.id,
			X.id,
			linktable.post_code,
			linktable.tel,
			linktable.annual_income,
			linktable.company_capital,
			linktable.stuff_size,
			linktable.annual_turnover,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.length_of_employment,
			linktable.pm_id
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, tenant_id, post_code, tel, annual_income, company_capital, stuff_size, annual_turnover, created_at, updated_at, created_by, updated_by, length_of_employment, ' || rec1.id || ' FROM tenant_work_info') AS
		linktable 
			(id bigint,
			tenant_id bigint,
			post_code character varying(16),
			tel character varying(16),
			annual_income double precision,
			company_capital bigint,
			stuff_size bigint,
			annual_turnover double precision,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			length_of_employment character varying(16),
			pm_id smallint)
		LEFT JOIN tenant X ON X.original_id = linktable.tenant_id AND X.pm_id = rec1.id;

		--tenant_work_info_intl
		INSERT INTO tenant_work_info_intl (tenant_work_info_id, name, address, industry, department, position, remarks, language_id, created_at, updated_at, created_by, updated_by, supervisor) 	
		SELECT 	X.id,
			linktable.name,
			linktable.address,
			linktable.industry,
			linktable.department,
			linktable.position,
			linktable.remarks,
			linktable.language_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.supervisor
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT tenant_work_info_id, name, address, industry, department, position, remarks, language_id, created_at, updated_at, created_by, updated_by, supervisor FROM tenant_work_info_intl') AS
		linktable 
			(tenant_work_info_id bigint,
			name character varying(64),
			address character varying(255),
			industry character varying(255),
			department character varying(255),
			position character varying(255),
			remarks character varying(255),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			supervisor character varying(32))
		LEFT JOIN tenant_work_info X ON X.original_id = linktable.tenant_work_info_id AND X.pm_id = rec1.id;
		
		
		--property_repair_info
		INSERT INTO property_repair_info (original_id, room_id, invoice_id, serial_number, status, content_type, type, reception_date, start_on, target_completion_date, completed_on, creation_date, last_updated, repair_cost, repair_sales, owner_charge, tenant_charge, paid, created_at, updated_at, created_by, updated_by, pm_id) 	
		SELECT 	linktable.id,
			Y.id,
			X.id,
			linktable.serial_number,
			linktable.status,
			linktable.content_type,
			linktable.type,
			linktable.reception_date,
			linktable.start_on,
			linktable.target_completion_date,
			linktable.completed_on,
			linktable.creation_date,
			linktable.last_updated,
			linktable.repair_cost,
			linktable.repair_sales,
			linktable.owner_charge,
			linktable.tenant_charge,
			linktable.paid,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, room_id, invoice_id, serial_number, status, content_type, type, reception_date, start_on, target_completion_date, completed_on, creation_date, last_updated, repair_cost, repair_sales, owner_charge, tenant_charge, paid, created_at, updated_at, created_by, updated_by, ' || rec1.id || ' FROM property_repair_info') AS
		linktable 
			(id bigint,
			room_id bigint,
			invoice_id bigint,
			serial_number character varying(64),
			status smallint,
			content_type smallint,
			type smallint,
			reception_date date,
			start_on date,
			target_completion_date date,
			completed_on date,
			creation_date date,
			last_updated date,
			repair_cost double precision,
			repair_sales double precision,
			owner_charge double precision,
			tenant_charge double precision,
			paid bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			pm_id smallint)
		LEFT JOIN invoice X ON X.original_id = linktable.invoice_id AND X.pm_id = rec1.id
		LEFT JOIN room Y ON Y.original_id = linktable.room_id AND Y.pm_id = rec1.id;		


		--repair_invoice_tenant
		INSERT INTO repair_invoice_tenant (tenant_id, property_repair_info_id, invoice_id, created_at, updated_at) 	
		SELECT 	Y.id,
			W.id,
			X.id,
			linktable.created_at,
			linktable.updated_at 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT tenant_id, property_repair_info_id, invoice_id, created_at, updated_at FROM repair_invoice_tenant') AS
		linktable 
			(tenant_id bigint,
			property_repair_info_id bigint,
			invoice_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone)
		LEFT JOIN property_repair_info W ON W.original_id = linktable.property_repair_info_id AND W.pm_id = rec1.id
		LEFT JOIN invoice X ON X.original_id = linktable.invoice_id AND X.pm_id = rec1.id
		LEFT JOIN tenant Y ON Y.original_id = linktable.tenant_id AND Y.pm_id = rec1.id;

		--property_repair_info_intl
		INSERT INTO property_repair_info_intl (property_repair_info_id, repair_work, assignee, remarks, language_id, created_at, updated_at, created_by, updated_by) 	
		SELECT 	W.id,
			linktable.repair_work,
			linktable.assignee,
			linktable.remarks,
			linktable.language_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT property_repair_info_id, repair_work, assignee, remarks, language_id, created_at, updated_at, created_by, updated_by FROM property_repair_info_intl') AS
		linktable 
			(property_repair_info_id bigint,
			repair_work character varying(64),
			assignee character varying(128),
			remarks character varying(255),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint)
		LEFT JOIN property_repair_info W ON W.original_id = linktable.property_repair_info_id AND W.pm_id = rec1.id;

		--tenant_intl
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO tenant_intl (tenant_id, name, last_name, first_name, last_name_furi, first_name_furi, corp_registered_address, corp_responsible_person, corp_responsible_person_office, corp_representative_person, remarks, bank_name, branch_name, language_id, name_furi, created_at, updated_at, created_by, updated_by) 	
		SELECT 	X.id,
			linktable.name,
			linktable.last_name,
			linktable.first_name,
			linktable.last_name_furi,
			linktable.first_name_furi,
			linktable.corp_registered_address,
			linktable.corp_responsible_person,
			linktable.corp_responsible_person_office,
			linktable.corp_representative_person,
			linktable.remarks,
			linktable.bank_name,
			linktable.branch_name,
			linktable.language_id,
			linktable.name_furi,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT tenant_id, name, last_name, first_name, last_name_furi, first_name_furi, corp_registered_address, corp_responsible_person, corp_responsible_person_office, corp_representative_person, remarks, bank_name, branch_name, language_id, name_furi, created_at, updated_at, created_by, updated_by FROM tenant_intl') AS
		linktable 
			(tenant_id bigint,
			name character varying(64),
			last_name character varying(64),
			first_name character varying(64),
			last_name_furi character varying(64),
			first_name_furi character varying(64),
			corp_registered_address character varying(255),
			corp_responsible_person character varying(64),
			corp_responsible_person_office character varying(255),
			corp_representative_person character varying(64),
			remarks character varying(255),
			bank_name character varying(32),
			branch_name character varying(32),
			language_id bigint,     
			name_furi character varying(128),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,       
			updated_by bigint)
		LEFT JOIN tenant X ON X.original_id = linktable.tenant_id AND X.pm_id = rec1.id;

		ELSE

		INSERT INTO tenant_intl (tenant_id, name, last_name, first_name, last_name_furi, first_name_furi, corp_registered_address, corp_responsible_person, corp_responsible_person_office, corp_representative_person, remarks, bank_name, branch_name, language_id, name_furi, created_at, updated_at, created_by, updated_by, other_cost_name1, other_cost_name2, other_cost_name3, other_cost_name4, other_cost_name5, other_cost_name6, other_cost_name7, other_cost_name8, other_cost_name9, other_cost_name10, other_cost_not_owner_income_name1, other_cost_not_owner_income_name2, other_cost_not_owner_income_name3, other_cost_not_owner_income_name4, other_cost_not_owner_income_name5, other_cost_not_owner_income_name6, other_cost_not_owner_income_name7, other_cost_not_owner_income_name8, other_cost_not_owner_income_name9, other_cost_not_owner_income_name10) 	
		SELECT 	X.id,
			linktable.name,
			linktable.last_name,
			linktable.first_name,
			linktable.last_name_furi,
			linktable.first_name_furi,
			linktable.corp_registered_address,
			linktable.corp_responsible_person,
			linktable.corp_responsible_person_office,
			linktable.corp_representative_person,
			linktable.remarks,
			linktable.bank_name,
			linktable.branch_name,
			linktable.language_id,
			linktable.name_furi,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.other_cost_name1,
			linktable.other_cost_name2,
			linktable.other_cost_name3,
			linktable.other_cost_name4,
			linktable.other_cost_name5,
			linktable.other_cost_name6,
			linktable.other_cost_name7,
			linktable.other_cost_name8,
			linktable.other_cost_name9,
			linktable.other_cost_name10,
			linktable.other_cost_not_owner_income_name1,
			linktable.other_cost_not_owner_income_name2,
			linktable.other_cost_not_owner_income_name3,
			linktable.other_cost_not_owner_income_name4,
			linktable.other_cost_not_owner_income_name5,
			linktable.other_cost_not_owner_income_name6,
			linktable.other_cost_not_owner_income_name7,
			linktable.other_cost_not_owner_income_name8,
			linktable.other_cost_not_owner_income_name9,
			linktable.other_cost_not_owner_income_name10 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT tenant_id, name, last_name, first_name, last_name_furi, first_name_furi, corp_registered_address, corp_responsible_person, corp_responsible_person_office, corp_representative_person, remarks, bank_name, branch_name, language_id, name_furi, created_at, updated_at, created_by, updated_by, other_cost_name1, other_cost_name2, other_cost_name3, other_cost_name4, other_cost_name5, other_cost_name6, other_cost_name7, other_cost_name8, other_cost_name9, other_cost_name10, other_cost_not_owner_income_name1, other_cost_not_owner_income_name2, other_cost_not_owner_income_name3, other_cost_not_owner_income_name4, other_cost_not_owner_income_name5, other_cost_not_owner_income_name6, other_cost_not_owner_income_name7, other_cost_not_owner_income_name8, other_cost_not_owner_income_name9, other_cost_not_owner_income_name10 FROM tenant_intl') AS
		linktable 
			(tenant_id bigint,
			name character varying(64),
			last_name character varying(64),
			first_name character varying(64),
			last_name_furi character varying(64),
			first_name_furi character varying(64),
			corp_registered_address character varying(255),
			corp_responsible_person character varying(64),
			corp_responsible_person_office character varying(255),
			corp_representative_person character varying(64),
			remarks character varying(255),
			bank_name character varying(32),
			branch_name character varying(32),
			language_id bigint,     
			name_furi character varying(128),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,       
			updated_by bigint,
			other_cost_name1 character varying(64),
			other_cost_name2 character varying(64),
			other_cost_name3 character varying(64),
			other_cost_name4 character varying(64),
			other_cost_name5 character varying(64),
			other_cost_name6 character varying(64),
			other_cost_name7 character varying(64),
			other_cost_name8 character varying(64),
			other_cost_name9 character varying(64),
			other_cost_name10 character varying(64),
			other_cost_not_owner_income_name1 character varying(64),
			other_cost_not_owner_income_name2 character varying(64),
			other_cost_not_owner_income_name3 character varying(64),
			other_cost_not_owner_income_name4 character varying(64),
			other_cost_not_owner_income_name5 character varying(64),
			other_cost_not_owner_income_name6 character varying(64),
			other_cost_not_owner_income_name7 character varying(64),
			other_cost_not_owner_income_name8 character varying(64),
			other_cost_not_owner_income_name9 character varying(64),
			other_cost_not_owner_income_name10 character varying(64))
		LEFT JOIN tenant X ON X.original_id = linktable.tenant_id AND X.pm_id = rec1.id;
		END CASE;

		--guarantor_info
		INSERT INTO guarantor_info (original_id, tenant_id, type, birth_date, gender, tel, email, postal_code, work_postal_code, work_tel, income, capital, created_at, updated_at, created_by, updated_by, room_id, pm_id) 	
		SELECT 	linktable.id,
			X.id,
			linktable.type,
			linktable.birth_date,
			linktable.gender,
			linktable.tel,
			linktable.email,
			linktable.postal_code,
			linktable.work_postal_code,
			linktable.work_tel,
			linktable.income,
			linktable.capital,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.room_id,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, tenant_id, type, birth_date, gender, tel, email, postal_code, work_postal_code, work_tel, income, capital, created_at, updated_at, created_by, updated_by, room_id, ' || rec1.id || ' FROM guarantor_info') AS
		linktable 
			(id bigint,
			tenant_id bigint,
			type bigint,
			birth_date date,
			gender bigint,
			tel character varying(32),
			email character varying(255),
			postal_code character varying(32),
			work_postal_code character varying(32),
			work_tel character varying(255),
			income double precision,
			capital double precision,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			room_id bigint,
			pm_id smallint)
		LEFT JOIN tenant X ON X.original_id = linktable.tenant_id AND X.pm_id = rec1.id;	


		----guarantor_info_intl
		INSERT INTO guarantor_info_intl (guarantor_info_id, name, name_furi, relationship, address, work, work_address, business, unit, position, remarks, language_id, created_at, updated_at, created_by, updated_by) 	
		SELECT 	X.id,
			linktable.name,
			linktable.name_furi,
			linktable.relationship,
			linktable.address,
			linktable.work,
			linktable.work_address,
			linktable.business,
			linktable.unit,
			linktable.position,
			linktable.remarks,
			linktable.language_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT guarantor_info_id, name, name_furi, relationship, address, work, work_address, business, unit, position, remarks, language_id, created_at, updated_at, created_by, updated_by FROM guarantor_info_intl') AS
		linktable 
			(guarantor_info_id bigint,  
			name character varying(64),
			name_furi character varying(64),
			relationship character varying(255),
			address character varying(255),
			work character varying(32),
			work_address character varying(255),
			business character varying(64),
			unit character varying(32),
			position character varying(32),
			remarks character varying(255),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint)
		LEFT JOIN guarantor_info X ON X.original_id = linktable.guarantor_info_id AND X.pm_id = rec1.id;

		--tenant_info
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO tenant_info (original_id, tenant_id, age, tel, register_date, created_at, updated_at, created_by, updated_by, room_id, pm_id) 
		SELECT 	linktable.id,
			X.id,
			linktable.age,
			linktable.tel,
			linktable.register_date,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.room_id,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, tenant_id, age, tel, register_date, created_at, updated_at, created_by, updated_by, room_id, ' || rec1.id || ' FROM tenant_info') AS
		linktable 
			(id bigint,
			tenant_id bigint,
			age bigint,
			tel character varying(16),
			register_date date,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			room_id bigint,
			pm_id smallint)
		LEFT JOIN tenant X ON X.original_id = linktable.tenant_id AND X.pm_id = rec1.id;


		ELSE	
	
		INSERT INTO tenant_info (original_id, tenant_id, age, tel, register_date, created_at, updated_at, created_by, updated_by, room_id, birth_date, pm_id) 
		SELECT 	linktable.id,
			X.id,
			linktable.age,
			linktable.tel,
			linktable.register_date,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.room_id,
			linktable.birth_date,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, tenant_id, age, tel, register_date, created_at, updated_at, created_by, updated_by, room_id, birth_date, ' || rec1.id || ' FROM tenant_info') AS
		linktable 
			(id bigint,
			tenant_id bigint,
			age bigint,
			tel character varying(16),
			register_date date,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			room_id bigint,
			birth_date date,
			pm_id smallint)
		LEFT JOIN tenant X ON X.original_id = linktable.tenant_id AND X.pm_id = rec1.id;
		END CASE;

		--tenant_info_intl
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO tenant_info_intl (tenant_info_id, name, relationship, company_name, company_address, remarks, language_id, created_at, updated_at, created_by, updated_by) 	
		SELECT 	X.id,
			linktable.name,
			linktable.relationship,
			linktable.company_name,
			linktable.company_address,
			linktable.remarks,
			linktable.language_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT tenant_info_id, name, relationship, company_name, company_address, remarks, language_id, created_at, updated_at, created_by, updated_by FROM tenant_info_intl') AS
		linktable 
			(tenant_info_id bigint,
			name character varying(64),
			relationship character varying(255),
			company_name character varying(64),
			company_address character varying(255),
			remarks character varying(255),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by  bigint)
		LEFT JOIN tenant_info X ON X.original_id = linktable.tenant_info_id AND X.pm_id = rec1.id;
		ELSE
		INSERT INTO tenant_info_intl (tenant_info_id, name, relationship, company_name, company_address, remarks, language_id, created_at, updated_at, created_by, updated_by, name_furi) 	
		SELECT 	X.id,
			linktable.name,
			linktable.relationship,
			linktable.company_name,
			linktable.company_address,
			linktable.remarks,
			linktable.language_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.name_furi 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT tenant_info_id, name, relationship, company_name, company_address, remarks, language_id, created_at, updated_at, created_by, updated_by, name_furi FROM tenant_info_intl') AS
		linktable 
			(tenant_info_id bigint,
			name character varying(64),
			relationship character varying(255),
			company_name character varying(64),
			company_address character varying(255),
			remarks character varying(255),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by  bigint,
			name_furi character varying(64))
		LEFT JOIN tenant_info X ON X.original_id = linktable.tenant_info_id AND X.pm_id = rec1.id;
		END CASE;

		
		--repair_invoice_owner
		INSERT INTO repair_invoice_owner (owner_id, invoice_id, property_repair_info_id, created_at, updated_at) 	
		SELECT 	Y.id,
			X.id,
			W.id,
			linktable.created_at,
			linktable.updated_at 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT owner_id, invoice_id, property_repair_info_id, created_at, updated_at FROM repair_invoice_owner') AS
		linktable 
			(owner_id bigint,
			invoice_id bigint,
			property_repair_info_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone)
		LEFT JOIN property_repair_info W ON W.original_id = linktable.property_repair_info_id AND W.pm_id = rec1.id
		LEFT JOIN owner_invoice X ON X.original_id = linktable.invoice_id AND X.pm_id = rec1.id
		LEFT JOIN owner Y ON Y.original_id = linktable.owner_id AND Y.pm_id = rec1.id;


		--rental_contract
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO rental_contract (original_id, tenant_id, room_id, status, created_at, updated_at, pm_id) 
		SELECT 	linktable.id,
			X.id,
			Y.id,
			linktable.status,
			linktable.created_at,
			linktable.updated_at,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, tenant_id, room_id, status, created_at, updated_at, ' || rec1.id || ' FROM rental_contract') AS
		linktable 
			(id bigint,
			tenant_id bigint,
			room_id bigint,
			status bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			pm_id smallint)
		LEFT JOIN tenant X ON X.original_id = linktable.tenant_id AND X.pm_id = rec1.id
		LEFT JOIN room Y ON Y.original_id = linktable.room_id AND Y.pm_id = rec1.id;	
		ELSE
		INSERT INTO rental_contract (original_id, tenant_id, room_id, status, created_at, updated_at, external_contract_id, pm_id) 
		SELECT 	linktable.id,
			X.id,
			Y.id,
			linktable.status,
			linktable.created_at,
			linktable.updated_at,
			linktable.external_contract_id,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, tenant_id, room_id, status, created_at, updated_at, external_contract_id, ' || rec1.id || ' FROM rental_contract') AS
		linktable 
			(id bigint,
			tenant_id bigint,
			room_id bigint,
			status bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			external_contract_id character varying(32),
			pm_id smallint)
		LEFT JOIN tenant X ON X.original_id = linktable.tenant_id AND X.pm_id = rec1.id
		LEFT JOIN room Y ON Y.original_id = linktable.room_id AND Y.pm_id = rec1.id;
		END CASE;

		
		--onetime_account
		INSERT INTO onetime_account (original_id, contract_id, assigned, import_date, assign_date, unassign_date, account_name, account_manage_no, manage_name, bank_assign_date, bank_application_date, bank_renewal_date, bank_status, branch_number, account_number, pm_id) 
		SELECT 	linktable.id,
			X.id,
			linktable.assigned,
			linktable.import_date,
			linktable.assign_date,
			linktable.unassign_date,
			linktable.account_name,
			linktable.account_manage_no,
			linktable.manage_name,
			linktable.bank_assign_date,
			linktable.bank_application_date,
			linktable.bank_renewal_date,
			linktable.bank_status,
			linktable.branch_number,
			linktable.account_number,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, contract_id, assigned, import_date, assign_date, unassign_date, account_name, account_manage_no, manage_name, bank_assign_date, bank_application_date, bank_renewal_date, bank_status, branch_number, account_number, ' || rec1.id || ' FROM onetime_account') AS
		linktable 
			(id bigint,
			contract_id bigint,
			assigned boolean,
			import_date date,
			assign_date date,
			unassign_date date,
			account_name character varying(64),
			account_manage_no character varying(64),
			manage_name character varying(64),
			bank_assign_date date,
			bank_application_date date,
			bank_renewal_date date,
			bank_status character varying(32),
			branch_number character varying(7),
			account_number character varying(64),
			pm_id smallint)
		LEFT JOIN rental_contract X ON X.original_id = linktable.contract_id AND X.pm_id = rec1.id;

		
		--contract_account_history
		INSERT INTO contract_account_history (account_id, contract_id, assign_date, unassign_date) 	
		SELECT 	Y.id,
			X.id,
			linktable.assign_date,
			linktable.unassign_date 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT account_id, contract_id, assign_date, unassign_date FROM contract_account_history') AS
		linktable 
			(account_id bigint,
			contract_id bigint,
			assign_date date,
			unassign_date date)
		LEFT JOIN rental_contract X ON X.original_id = linktable.contract_id AND X.pm_id = rec1.id
		LEFT JOIN onetime_account Y ON Y.original_id = linktable.account_id AND Y.pm_id = rec1.id;

		
		--rental_contract_renew_info
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO rental_contract_renew_info (original_id, contract_id, renewal_fee, renewal_commission_fee, renewal_administration_fee, application_date, renewed_period_commencement_date, renewed_period_expiry_date, payment_date, rent, management_fee, parking_fee, hot_water_bill, water_bill, others_fee, others_fee_not_owner_income, status, created_at, updated_at, created_by, updated_by, bank_charge_fee, water_fee_paid_by, internet_fee, internet_fee_paid_by, sub_leasing_fee, hot_water_fee_paid_by, rental_contract_town_fee, rental_contract_electricity_fee, rental_contract_gas_fee, rental_contract_ff_lease_fee, rental_contract_storeroom_fee, rental_contract_withdrawal_charge, rental_contract_trunk_room_fee, pm_id) 
		SELECT 	linktable.id,
			X.id,
			linktable.renewal_fee,
			linktable.renewal_commission_fee,
			linktable.renewal_administration_fee,
			linktable.application_date,
			linktable.renewed_period_commencement_date,
			linktable.renewed_period_expiry_date,
			linktable.payment_date,
			linktable.rent,
			linktable.management_fee,
			linktable.parking_fee,
			linktable.hot_water_bill,
			linktable.water_bill,
			linktable.others_fee,
			linktable.others_fee_not_owner_income,
			linktable.status,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.bank_charge_fee,       
			linktable.water_fee_paid_by,
			linktable.internet_fee,    
			linktable.internet_fee_paid_by,
			linktable.sub_leasing_fee,
			linktable.hot_water_fee_paid_by,
			linktable.rental_contract_town_fee,
			linktable.rental_contract_electricity_fee,
			linktable.rental_contract_gas_fee,
			linktable.rental_contract_ff_lease_fee,
			linktable.rental_contract_storeroom_fee,
			linktable.rental_contract_withdrawal_charge,
			linktable.rental_contract_trunk_room_fee,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, contract_id, renewal_fee, renewal_commission_fee, renewal_administration_fee, application_date, renewed_period_commencement_date, renewed_period_expiry_date, payment_date, rent, management_fee, parking_fee, hot_water_bill, water_bill, others_fee, others_fee_not_owner_income, status, created_at, updated_at, created_by, updated_by, bank_charge_fee, water_fee_paid_by, internet_fee, internet_fee_paid_by, sub_leasing_fee, hot_water_fee_paid_by, rental_contract_town_fee, rental_contract_electricity_fee, rental_contract_gas_fee, rental_contract_ff_lease_fee, rental_contract_storeroom_fee, rental_contract_withdrawal_charge, rental_contract_trunk_room_fee, ' || rec1.id || ' FROM rental_contract_renew_info') AS
		linktable 
			(id bigint,
			contract_id bigint,
			renewal_fee double precision,
			renewal_commission_fee double precision,
			renewal_administration_fee double precision,
			application_date date,
			renewed_period_commencement_date date,
			renewed_period_expiry_date date,
			payment_date date,
			rent double precision,
			management_fee double precision,
			parking_fee double precision,
			hot_water_bill double precision,
			water_bill double precision,
			others_fee double precision,
			others_fee_not_owner_income double precision,
			status smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			bank_charge_fee double precision,
			water_fee_paid_by smallint,
			internet_fee double precision,
			internet_fee_paid_by smallint,
			sub_leasing_fee double precision,
			hot_water_fee_paid_by smallint,
			rental_contract_town_fee double precision,
			rental_contract_electricity_fee double precision,
			rental_contract_gas_fee double precision,
			rental_contract_ff_lease_fee double precision,
			rental_contract_storeroom_fee double precision,
			rental_contract_withdrawal_charge double precision,
			rental_contract_trunk_room_fee double precision,
			pm_id smallint)
		LEFT JOIN rental_contract X ON X.original_id = linktable.contract_id AND X.pm_id = rec1.id;
		ELSE
		INSERT INTO rental_contract_renew_info (original_id, contract_id, renewal_fee, renewal_commission_fee, renewal_administration_fee, application_date, renewed_period_commencement_date, renewed_period_expiry_date, payment_date, rent, management_fee, parking_fee, hot_water_bill, water_bill, others_fee, others_fee_not_owner_income, status, created_at, updated_at, created_by, updated_by, bank_charge_fee, water_fee_paid_by, internet_fee, internet_fee_paid_by, sub_leasing_fee, hot_water_fee_paid_by, rental_contract_town_fee, rental_contract_electricity_fee, rental_contract_gas_fee, rental_contract_ff_lease_fee, rental_contract_storeroom_fee, rental_contract_withdrawal_charge, rental_contract_trunk_room_fee, external_renew_contract_id, pm_id) 
		SELECT 	linktable.id,
			X.id,
			linktable.renewal_fee,
			linktable.renewal_commission_fee,
			linktable.renewal_administration_fee,
			linktable.application_date,
			linktable.renewed_period_commencement_date,
			linktable.renewed_period_expiry_date,
			linktable.payment_date,
			linktable.rent,
			linktable.management_fee,
			linktable.parking_fee,
			linktable.hot_water_bill,
			linktable.water_bill,
			linktable.others_fee,
			linktable.others_fee_not_owner_income,
			linktable.status,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.bank_charge_fee,       
			linktable.water_fee_paid_by,
			linktable.internet_fee,    
			linktable.internet_fee_paid_by,
			linktable.sub_leasing_fee,
			linktable.hot_water_fee_paid_by,
			linktable.rental_contract_town_fee,
			linktable.rental_contract_electricity_fee,
			linktable.rental_contract_gas_fee,
			linktable.rental_contract_ff_lease_fee,
			linktable.rental_contract_storeroom_fee,
			linktable.rental_contract_withdrawal_charge,
			linktable.rental_contract_trunk_room_fee,
			linktable.external_renew_contract_id,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, contract_id, renewal_fee, renewal_commission_fee, renewal_administration_fee, application_date, renewed_period_commencement_date, renewed_period_expiry_date, payment_date, rent, management_fee, parking_fee, hot_water_bill, water_bill, others_fee, others_fee_not_owner_income, status, created_at, updated_at, created_by, updated_by, bank_charge_fee, water_fee_paid_by, internet_fee, internet_fee_paid_by, sub_leasing_fee, hot_water_fee_paid_by, rental_contract_town_fee, rental_contract_electricity_fee, rental_contract_gas_fee, rental_contract_ff_lease_fee, rental_contract_storeroom_fee, rental_contract_withdrawal_charge, rental_contract_trunk_room_fee, external_renew_contract_id, ' || rec1.id || ' FROM rental_contract_renew_info') AS
		linktable 
			(id bigint,
			contract_id bigint,
			renewal_fee double precision,
			renewal_commission_fee double precision,
			renewal_administration_fee double precision,
			application_date date,
			renewed_period_commencement_date date,
			renewed_period_expiry_date date,
			payment_date date,
			rent double precision,
			management_fee double precision,
			parking_fee double precision,
			hot_water_bill double precision,
			water_bill double precision,
			others_fee double precision,
			others_fee_not_owner_income double precision,
			status smallint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			bank_charge_fee double precision,
			water_fee_paid_by smallint,
			internet_fee double precision,
			internet_fee_paid_by smallint,
			sub_leasing_fee double precision,
			hot_water_fee_paid_by smallint,
			rental_contract_town_fee double precision,
			rental_contract_electricity_fee double precision,
			rental_contract_gas_fee double precision,
			rental_contract_ff_lease_fee double precision,
			rental_contract_storeroom_fee double precision,
			rental_contract_withdrawal_charge double precision,
			rental_contract_trunk_room_fee double precision,
			external_renew_contract_id character varying(32),
			pm_id smallint)
		LEFT JOIN rental_contract X ON X.original_id = linktable.contract_id AND X.pm_id = rec1.id;
		END CASE;

		--rental_contract_renew_info_intl
		INSERT INTO rental_contract_renew_info_intl (contract_renew_info_id, language_id, others_fee_name, others_fee_name_not_owner_income, remarks, created_at, updated_at, created_by, updated_by) 	
		SELECT 	X.id,
			linktable.language_id,
			linktable.others_fee_name,
			linktable.others_fee_name_not_owner_income,
			linktable.remarks,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT contract_renew_info_id, language_id, others_fee_name, others_fee_name_not_owner_income, remarks, created_at, updated_at, created_by, updated_by FROM rental_contract_renew_info_intl') AS
		linktable 
			(contract_renew_info_id bigint,
			language_id bigint,
			others_fee_name character varying(255),
			others_fee_name_not_owner_income character varying(255),
			remarks character varying(255),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint)
		LEFT JOIN rental_contract_renew_info X ON X.original_id = linktable.contract_renew_info_id AND X.pm_id = rec1.id;

		
		--rental_contract_cancellation
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO rental_contract_cancellation (original_id, contract_id, termination_notice_date, movingout_date, termination_date, invoice_date, invoice_due, bank_use_complete_date, repair_fee_tenant, proration_rent, hot_water_fee, proration_management_fee, proration_parking_fee, water_fee, other_fees, others_fee_not_owner_income, payment_method, movein_available_date, created_at, updated_at, created_by, updated_by, status, pm_id) 
		SELECT 	linktable.id, 
			X.id, 
			linktable.termination_notice_date, 
			linktable.movingout_date, 
			linktable.termination_date, 
			linktable.invoice_date, 
			linktable.invoice_due, 
			linktable.bank_use_complete_date, 
			linktable.repair_fee_tenant, 
			linktable.proration_rent, 
			linktable.hot_water_fee, 
			linktable.proration_management_fee, 
			linktable.proration_parking_fee, 
			linktable.water_fee, 
			linktable.other_fees, 
			linktable.others_fee_not_owner_income, 
			linktable.payment_method, 
			linktable.movein_available_date, 
			linktable.created_at, 
			linktable.updated_at, 
			linktable.created_by, 
			linktable.updated_by, 
			linktable.status,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, contract_id, termination_notice_date, movingout_date, termination_date, invoice_date, invoice_due, bank_use_complete_date, repair_fee_tenant, proration_rent, hot_water_fee, proration_management_fee, proration_parking_fee, water_fee, other_fees, others_fee_not_owner_income, payment_method, movein_available_date, created_at, updated_at, created_by, updated_by, status, ' || rec1.id || ' FROM rental_contract_cancellation') AS
		linktable 
			(id bigint,
			contract_id bigint,
			termination_notice_date date,
			movingout_date date,
			termination_date date,
			invoice_date date,
			invoice_due date,
			bank_use_complete_date date,
			repair_fee_tenant double precision,
			proration_rent double precision,
			hot_water_fee double precision,
			proration_management_fee double precision,
			proration_parking_fee double precision,
			water_fee double precision,
			other_fees double precision,
			others_fee_not_owner_income double precision,
			payment_method smallint,
			movein_available_date date,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			status smallint,
			pm_id smallint)
		LEFT JOIN rental_contract X ON X.original_id = linktable.contract_id AND X.pm_id = rec1.id;
		ELSE
		INSERT INTO rental_contract_cancellation (original_id, contract_id, termination_notice_date, movingout_date, termination_date, invoice_date, invoice_due, bank_use_complete_date, repair_fee_tenant, proration_rent, hot_water_fee, proration_management_fee, proration_parking_fee, water_fee, other_fees, others_fee_not_owner_income, payment_method, movein_available_date, created_at, updated_at, created_by, updated_by, status, external_contract_cancellation_id, pm_id) 
		SELECT 	linktable.id, 
			X.id, 
			linktable.termination_notice_date, 
			linktable.movingout_date, 
			linktable.termination_date, 
			linktable.invoice_date, 
			linktable.invoice_due, 
			linktable.bank_use_complete_date, 
			linktable.repair_fee_tenant, 
			linktable.proration_rent, 
			linktable.hot_water_fee, 
			linktable.proration_management_fee, 
			linktable.proration_parking_fee, 
			linktable.water_fee, 
			linktable.other_fees, 
			linktable.others_fee_not_owner_income, 
			linktable.payment_method, 
			linktable.movein_available_date, 
			linktable.created_at, 
			linktable.updated_at, 
			linktable.created_by, 
			linktable.updated_by, 
			linktable.status, 
			linktable.external_contract_cancellation_id, 
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, contract_id, termination_notice_date, movingout_date, termination_date, invoice_date, invoice_due, bank_use_complete_date, repair_fee_tenant, proration_rent, hot_water_fee, proration_management_fee, proration_parking_fee, water_fee, other_fees, others_fee_not_owner_income, payment_method, movein_available_date, created_at, updated_at, created_by, updated_by, status, external_contract_cancellation_id, ' || rec1.id || ' FROM rental_contract_cancellation') AS
		linktable 
			(id bigint,
			contract_id bigint,
			termination_notice_date date,
			movingout_date date,
			termination_date date,
			invoice_date date,
			invoice_due date,
			bank_use_complete_date date,
			repair_fee_tenant double precision,
			proration_rent double precision,
			hot_water_fee double precision,
			proration_management_fee double precision,
			proration_parking_fee double precision,
			water_fee double precision,
			other_fees double precision,
			others_fee_not_owner_income double precision,
			payment_method smallint,
			movein_available_date date,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			status smallint,
			external_contract_cancellation_id character varying(32),
			pm_id smallint)
		LEFT JOIN rental_contract X ON X.original_id = linktable.contract_id AND X.pm_id = rec1.id;
		END CASE;


		--rental_contract_cancellation_intl
		INSERT INTO rental_contract_cancellation_intl (rental_contract_cancellation_id, others_fee_name, others_fee_name_not_owner_income, remarks, language_id, created_at, updated_at, created_by, updated_by) 	
		SELECT 	X.id,
			linktable.others_fee_name,
			linktable.others_fee_name_not_owner_income,
			linktable.remarks,
			linktable.language_id,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT rental_contract_cancellation_id, others_fee_name, others_fee_name_not_owner_income, remarks, language_id, created_at, updated_at, created_by, updated_by FROM rental_contract_cancellation_intl') AS
		linktable 
			(rental_contract_cancellation_id bigint,
			others_fee_name character varying(255),
			others_fee_name_not_owner_income character varying(255),
			remarks character varying(255),
			language_id bigint,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint)
		LEFT JOIN rental_contract_cancellation X ON X.original_id = linktable.rental_contract_cancellation_id AND X.pm_id = rec1.id;


		--rental_contract_info
		CASE rec1.description
		WHEN 'assistasset_stag', 'demowp1_stag', 'demowp2_stag', 'demowp3_stag', 'ipglobal_stag', 'm0001_stag', 'samuraiglobal_stag', 'sonare_stag' THEN
		INSERT INTO rental_contract_info (original_id, contract_id, withholding_tax_rate, rent, management_fee, parking_fee, water_bill, hot_water_bill, others_fee, others_fee_not_owner_income, initial_fee_payment_date, initial_proration_rent, initial_proration_management_fee, initial_proration_parking_fee, initial_others_fee, initial_others_fee_not_owner_income, caution_money, caution_money_volume, caution_money_manager, key_money, key_money_volume, agency_fee, administration_service_fee, guarantee_commission_fee, cleaning_charges, key_exchange_fee, application_date, contract_date, commencement_date, expiry_date, movein_planned_date, free_rent_start, free_rent_end, rent_payment_day, pay_at_month_end, payee_bank, branch_number, account_number, account_name, insurance_policy_no, fire_insurance, created_at, updated_at, created_by, updated_by, bank_charge_fee, hot_water_fee_paid_by, water_fee_paid_by, internet_fee, internet_fee_paid_by, collection_administration_fee_enabled, sub_leasing_fee, rental_contract_town_fee, rental_contract_electricity_fee, rental_contract_gas_fee, rental_contract_ff_lease_fee, rental_contract_storeroom_fee, rental_contract_withdrawal_charge, rental_contract_trunk_room_fee, escrow_bank_account, paid_by_tenant, paid_by_owner, renewal_date, pm_id) 
		SELECT 	linktable.id,
			X.id,
			linktable.withholding_tax_rate,
			linktable.rent,
			linktable.management_fee,
			linktable.parking_fee,
			linktable.water_bill,
			linktable.hot_water_bill,
			linktable.others_fee,
			linktable.others_fee_not_owner_income,
			linktable.initial_fee_payment_date,
			linktable.initial_proration_rent,
			linktable.initial_proration_management_fee,
			linktable.initial_proration_parking_fee,
			linktable.initial_others_fee,
			linktable.initial_others_fee_not_owner_income,
			linktable.caution_money,
			linktable.caution_money_volume,
			linktable.caution_money_manager,
			linktable.key_money,
			linktable.key_money_volume,
			linktable.agency_fee,
			linktable.administration_service_fee,
			linktable.guarantee_commission_fee,
			linktable.cleaning_charges,
			linktable.key_exchange_fee,
			linktable.application_date,
			linktable.contract_date,
			linktable.commencement_date,
			linktable.expiry_date,
			linktable.movein_planned_date,
			linktable.free_rent_start,
			linktable.free_rent_end,
			linktable.rent_payment_day,
			linktable.pay_at_month_end,
			linktable.payee_bank, 
			linktable.branch_number,   
			linktable.account_number,
			linktable.account_name,
			linktable.insurance_policy_no,
			linktable.fire_insurance,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.bank_charge_fee,
			linktable.hot_water_fee_paid_by,
			linktable.water_fee_paid_by,
			linktable.internet_fee,
			linktable.internet_fee_paid_by,
			linktable.collection_administration_fee_enabled,
			linktable.sub_leasing_fee,
			linktable.rental_contract_town_fee,
			linktable.rental_contract_electricity_fee,
			linktable.rental_contract_gas_fee,
			linktable.rental_contract_ff_lease_fee,
			linktable.rental_contract_storeroom_fee,
			linktable.rental_contract_withdrawal_charge,
			linktable.rental_contract_trunk_room_fee,
			linktable.escrow_bank_account,
			linktable.paid_by_tenant,
			linktable.paid_by_owner,
			linktable.renewal_date,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, contract_id, withholding_tax_rate, rent, management_fee, parking_fee, water_bill, hot_water_bill, others_fee, others_fee_not_owner_income, initial_fee_payment_date, initial_proration_rent, initial_proration_management_fee, initial_proration_parking_fee, initial_others_fee, initial_others_fee_not_owner_income, caution_money, caution_money_volume, caution_money_manager, key_money, key_money_volume, agency_fee, administration_service_fee, guarantee_commission_fee, cleaning_charges, key_exchange_fee, application_date, contract_date, commencement_date, expiry_date, movein_planned_date, free_rent_start, free_rent_end, rent_payment_day, pay_at_month_end, payee_bank, branch_number, account_number, account_name, insurance_policy_no, fire_insurance, created_at, updated_at, created_by, updated_by, bank_charge_fee, hot_water_fee_paid_by, water_fee_paid_by, internet_fee, internet_fee_paid_by, collection_administration_fee_enabled, sub_leasing_fee, rental_contract_town_fee, rental_contract_electricity_fee, rental_contract_gas_fee, rental_contract_ff_lease_fee, rental_contract_storeroom_fee, rental_contract_withdrawal_charge, rental_contract_trunk_room_fee, escrow_bank_account, paid_by_tenant, paid_by_owner, renewal_date, ' || rec1.id || ' FROM rental_contract_info') AS
		linktable 
			(id bigint,
			contract_id bigint,
			withholding_tax_rate double precision,
			rent double precision,
			management_fee double precision,
			parking_fee double precision,
			water_bill double precision,
			hot_water_bill double precision,
			others_fee double precision,
			others_fee_not_owner_income double precision,
			initial_fee_payment_date date,
			initial_proration_rent double precision,
			initial_proration_management_fee double precision,
			initial_proration_parking_fee double precision,
			initial_others_fee double precision,
			initial_others_fee_not_owner_income double precision,
			caution_money double precision,
			caution_money_volume double precision,
			caution_money_manager smallint,
			key_money double precision,
			key_money_volume double precision,
			agency_fee double precision,
			administration_service_fee double precision,
			guarantee_commission_fee double precision,
			cleaning_charges double precision,
			key_exchange_fee double precision,
			application_date date,    
			contract_date date,
			commencement_date date, 
			expiry_date date,
			movein_planned_date date,
			free_rent_start date,
			free_rent_end date,
			rent_payment_day bigint,
			pay_at_month_end boolean,
			payee_bank smallint,
			branch_number character varying(7),
			account_number character varying(64),
			account_name character varying(64),
			insurance_policy_no character varying(64),
			fire_insurance double precision,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			bank_charge_fee double precision,
			hot_water_fee_paid_by smallint,
			water_fee_paid_by smallint,
			internet_fee double precision,
			internet_fee_paid_by smallint,
			collection_administration_fee_enabled smallint,
			sub_leasing_fee double precision,
			rental_contract_town_fee double precision,
			rental_contract_electricity_fee double precision,
			rental_contract_gas_fee double precision,
			rental_contract_ff_lease_fee double precision,
			rental_contract_storeroom_fee double precision,
			rental_contract_withdrawal_charge double precision,
			rental_contract_trunk_room_fee double precision,
			escrow_bank_account character varying(255),
			paid_by_tenant text,
			paid_by_owner text,
			renewal_date date,
			pm_id smallint)
		LEFT JOIN rental_contract X ON X.original_id = linktable.contract_id AND X.pm_id = rec1.id;
		ELSE
		INSERT INTO rental_contract_info (original_id, contract_id, withholding_tax_rate, rent, management_fee, parking_fee, water_bill, hot_water_bill, others_fee, others_fee_not_owner_income, initial_fee_payment_date, initial_proration_rent, initial_proration_management_fee, initial_proration_parking_fee, initial_others_fee, initial_others_fee_not_owner_income, caution_money, caution_money_volume, caution_money_manager, key_money, key_money_volume, agency_fee, administration_service_fee, guarantee_commission_fee, cleaning_charges, key_exchange_fee, application_date, contract_date, commencement_date, expiry_date, movein_planned_date, free_rent_start, free_rent_end, rent_payment_day, pay_at_month_end, payee_bank, branch_number, account_number, account_name, insurance_policy_no, fire_insurance, created_at, updated_at, created_by, updated_by, bank_charge_fee, hot_water_fee_paid_by, water_fee_paid_by, internet_fee, internet_fee_paid_by, collection_administration_fee_enabled, sub_leasing_fee, rental_contract_town_fee, rental_contract_electricity_fee, rental_contract_gas_fee, rental_contract_ff_lease_fee, rental_contract_storeroom_fee, rental_contract_withdrawal_charge, rental_contract_trunk_room_fee, escrow_bank_account, paid_by_tenant, paid_by_owner, renewal_date, external_contract_id, pm_id) 
		SELECT 	linktable.id,
			X.id,
			linktable.withholding_tax_rate,
			linktable.rent,
			linktable.management_fee,
			linktable.parking_fee,
			linktable.water_bill,
			linktable.hot_water_bill,
			linktable.others_fee,
			linktable.others_fee_not_owner_income,
			linktable.initial_fee_payment_date,
			linktable.initial_proration_rent,
			linktable.initial_proration_management_fee,
			linktable.initial_proration_parking_fee,
			linktable.initial_others_fee,
			linktable.initial_others_fee_not_owner_income,
			linktable.caution_money,
			linktable.caution_money_volume,
			linktable.caution_money_manager,
			linktable.key_money,
			linktable.key_money_volume,
			linktable.agency_fee,
			linktable.administration_service_fee,
			linktable.guarantee_commission_fee,
			linktable.cleaning_charges,
			linktable.key_exchange_fee,
			linktable.application_date,
			linktable.contract_date,
			linktable.commencement_date,
			linktable.expiry_date,
			linktable.movein_planned_date,
			linktable.free_rent_start,
			linktable.free_rent_end,
			linktable.rent_payment_day,
			linktable.pay_at_month_end,
			linktable.payee_bank, 
			linktable.branch_number,   
			linktable.account_number,
			linktable.account_name,
			linktable.insurance_policy_no,
			linktable.fire_insurance,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.bank_charge_fee,
			linktable.hot_water_fee_paid_by,
			linktable.water_fee_paid_by,
			linktable.internet_fee,
			linktable.internet_fee_paid_by,
			linktable.collection_administration_fee_enabled,
			linktable.sub_leasing_fee,
			linktable.rental_contract_town_fee,
			linktable.rental_contract_electricity_fee,
			linktable.rental_contract_gas_fee,
			linktable.rental_contract_ff_lease_fee,
			linktable.rental_contract_storeroom_fee,
			linktable.rental_contract_withdrawal_charge,
			linktable.rental_contract_trunk_room_fee,
			linktable.escrow_bank_account,
			linktable.paid_by_tenant,
			linktable.paid_by_owner,
			linktable.renewal_date,
			linktable.external_contract_id,
			linktable.pm_id 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT id, contract_id, withholding_tax_rate, rent, management_fee, parking_fee, water_bill, hot_water_bill, others_fee, others_fee_not_owner_income, initial_fee_payment_date, initial_proration_rent, initial_proration_management_fee, initial_proration_parking_fee, initial_others_fee, initial_others_fee_not_owner_income, caution_money, caution_money_volume, caution_money_manager, key_money, key_money_volume, agency_fee, administration_service_fee, guarantee_commission_fee, cleaning_charges, key_exchange_fee, application_date, contract_date, commencement_date, expiry_date, movein_planned_date, free_rent_start, free_rent_end, rent_payment_day, pay_at_month_end, payee_bank, branch_number, account_number, account_name, insurance_policy_no, fire_insurance, created_at, updated_at, created_by, updated_by, bank_charge_fee, hot_water_fee_paid_by, water_fee_paid_by, internet_fee, internet_fee_paid_by, collection_administration_fee_enabled, sub_leasing_fee, rental_contract_town_fee, rental_contract_electricity_fee, rental_contract_gas_fee, rental_contract_ff_lease_fee, rental_contract_storeroom_fee, rental_contract_withdrawal_charge, rental_contract_trunk_room_fee, escrow_bank_account, paid_by_tenant, paid_by_owner, renewal_date, external_contract_id, ' || rec1.id || ' FROM rental_contract_info') AS
		linktable 
			(id bigint,
			contract_id bigint,
			withholding_tax_rate double precision,
			rent double precision,
			management_fee double precision,
			parking_fee double precision,
			water_bill double precision,
			hot_water_bill double precision,
			others_fee double precision,
			others_fee_not_owner_income double precision,
			initial_fee_payment_date date,
			initial_proration_rent double precision,
			initial_proration_management_fee double precision,
			initial_proration_parking_fee double precision,
			initial_others_fee double precision,
			initial_others_fee_not_owner_income double precision,
			caution_money double precision,
			caution_money_volume double precision,
			caution_money_manager smallint,
			key_money double precision,
			key_money_volume double precision,
			agency_fee double precision,
			administration_service_fee double precision,
			guarantee_commission_fee double precision,
			cleaning_charges double precision,
			key_exchange_fee double precision,
			application_date date,    
			contract_date date,
			commencement_date date, 
			expiry_date date,
			movein_planned_date date,
			free_rent_start date,
			free_rent_end date,
			rent_payment_day bigint,
			pay_at_month_end boolean,
			payee_bank smallint,
			branch_number character varying(7),
			account_number character varying(64),
			account_name character varying(64),
			insurance_policy_no character varying(64),
			fire_insurance double precision,
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			bank_charge_fee double precision,
			hot_water_fee_paid_by smallint,
			water_fee_paid_by smallint,
			internet_fee double precision,
			internet_fee_paid_by smallint,
			collection_administration_fee_enabled smallint,
			sub_leasing_fee double precision,
			rental_contract_town_fee double precision,
			rental_contract_electricity_fee double precision,
			rental_contract_gas_fee double precision,
			rental_contract_ff_lease_fee double precision,
			rental_contract_storeroom_fee double precision,
			rental_contract_withdrawal_charge double precision,
			rental_contract_trunk_room_fee double precision,
			escrow_bank_account character varying(255),
			paid_by_tenant text,
			paid_by_owner text,
			renewal_date date,
			external_contract_id character varying(32),
			pm_id smallint)
		LEFT JOIN rental_contract X ON X.original_id = linktable.contract_id AND X.pm_id = rec1.id;
		END CASE;

		--rental_contract_info_intl
		INSERT INTO rental_contract_info_intl (rental_contract_info_id, others_fee_name, others_fee_name_not_owner_income, initial_others_fee_name, initial_others_fee_name_not_owner_income, caution_money_manager_other, payee_bank_name, insurance_company, agent, registered_broker_name, remarks, created_at, updated_at, created_by, updated_by, language_id, escrow_bank_name, escrow_bank_address) 	
		SELECT 	X.id,
			linktable.others_fee_name,
			linktable.others_fee_name_not_owner_income,
			linktable.initial_others_fee_name,
			linktable.initial_others_fee_name_not_owner_income,
			linktable.caution_money_manager_other,
			linktable.payee_bank_name,
			linktable.insurance_company,
			linktable.agent,
			linktable.registered_broker_name,
			linktable.remarks,
			linktable.created_at,
			linktable.updated_at,
			linktable.created_by,
			linktable.updated_by,
			linktable.language_id,
			linktable.escrow_bank_name,
			linktable.escrow_bank_address 	
		FROM dblink ('user=potato password=rjcadmin2014 dbname=' || rec1.description || ' ', 'SELECT rental_contract_info_id, others_fee_name, others_fee_name_not_owner_income, initial_others_fee_name, initial_others_fee_name_not_owner_income, caution_money_manager_other, payee_bank_name, insurance_company, agent, registered_broker_name, remarks, created_at, updated_at, created_by, updated_by, language_id, escrow_bank_name, escrow_bank_address FROM rental_contract_info_intl') AS
		linktable 
			(rental_contract_info_id bigint,
			others_fee_name character varying(255),
			others_fee_name_not_owner_income character varying(255),
			initial_others_fee_name character varying(255),
			initial_others_fee_name_not_owner_income character varying(255),
			caution_money_manager_other character varying(64),
			payee_bank_name character varying(128),
			insurance_company character varying(64),
			agent character varying(64),
			registered_broker_name character varying(64),
			remarks character varying(255),
			created_at timestamp with time zone,
			updated_at timestamp with time zone,
			created_by bigint,
			updated_by bigint,
			language_id bigint,
			escrow_bank_name character varying(255),
			escrow_bank_address character varying(255))
		LEFT JOIN rental_contract_info X ON X.original_id = linktable.rental_contract_info_id AND X.pm_id = rec1.id;


	END IF;
    END LOOP;
    --EXCEPTION WHEN OTHERS THEN RAISE NOTICE '%', rec1.description;
END;
$$ LANGUAGE plpgsql;
